//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "AdditionalService", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.AdditionalService), "SamplesAndAdditionalService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.SamplesAndAdditionalService), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "AntibioticType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.AntibioticType), "ROandClinicalTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandClinicalTest), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CENTER_PROJECT_CENTER", "Center", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.Center), "CentersAndProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.CentersAndProject), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CENTER_PROJECT_PROJECT", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.Project), "CentersAndProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.CentersAndProject), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CLINIC_CLINIC_GROUP", "ClinicGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.ClinicGroup), "Clinic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Clinic), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterialGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.ClinicMaterialGroup), "ClinicMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ClinicMaterial), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_CLINIC_MATERIAL", "ClinicMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.ClinicMaterial), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CLINIC_PERSON_CLINIC", "Clinic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Clinic), "ClinicPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ClinicPerson), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CLINIC_CONTRACT_CLINIC", "Clinic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Clinic), "ClinicsAndContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ClinicsAndContract), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_CLINIC", "Clinic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Clinic), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CLINIC_CONTRACT_CONTRACT", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Contract), "ClinicsAndContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ClinicsAndContract), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_CLINIC_CONTRACT", "ClinicsAndContract", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.ClinicsAndContract), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_COMMENT_COMMENT", "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Comment), "ROandComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandComment), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.Contract), "ContractsAndMBAnalysisType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ContractsAndMBAnalysisType), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "MBAnalysisType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.MBAnalysisType), "ContractsAndMBAnalysisType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ContractsAndMBAnalysisType), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.PaymentType), "ContractsAndMBAnalysisType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ContractsAndMBAnalysisType), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_DOCTOR", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Doctor), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_FENOTYPE_FENOTYPE", "Fenotype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Fenotype), "ROandFenotype", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandFenotype), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.MBAnalysi), "MBAnalysisBacterioscopy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.MBAnalysisBacterioscopy), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysisResult", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.MBAnalysisResult), "MBAnalysi", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.MBAnalysi), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysisType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.MBAnalysisType), "MBAnalysi", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.MBAnalysi), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_MB_STATUS", "MBStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.MBStatus), "MBAnalysi", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.MBAnalysi), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_SAMPLE", "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Sample), "MBAnalysi", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.MBAnalysi), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "MBAnalysi", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.MBAnalysi), "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.RO), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBBacterioscopyOrganismType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.MBBacterioscopyOrganismType), "MBAnalysisBacterioscopy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.MBAnalysisBacterioscopy), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_STATUS", "MBStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.MBStatus), "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.RO), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_CLINICAL_TEST_METHOD", "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.Method), "ROandClinicalTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandClinicalTest), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_ORGANISM", "OrganismType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.OrganismType), "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.RO), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_ORGANISM_TYPE", "OrganismType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.OrganismType), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_PATIENT_PATIENT_STATUS", "PatientStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.PatientStatusType), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Patient), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_PATIENT", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Patient), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_PROJECT_RO_PROJECT", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.Project), "ROandProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandProject), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_REIDENTIFY_ORGANISM_PROJECT", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.Project), "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.RO), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RemoveReason", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.RemoveReason), "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.RO), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_REMOVE_REASON", "RemoveReason", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.RemoveReason), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_CHAR_REIDENTIFY_ORGANISM", "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.RO), "ROChar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROChar), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.RO), "ROandClinicalTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandClinicalTest), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_COMMENT_REIDENTIFY_ORGANISM", "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.RO), "ROandComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandComment), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.RO), "ROandFenotype", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandFenotype), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_Samples", "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.Sample), "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.RO), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_ROandProjects_RO", "RO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagnostics_FP.Models.RO), "ROandProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROandProject), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_RO_CHAR_RO_CHAR_NAME", "ROCharName", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.ROCharName), "ROChar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.ROChar), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "SamplePaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.SamplePaymentType), "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.Sample), true)]
[assembly: EdmRelationshipAttribute("mlabModel", "FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "Sample", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Diagnostics_FP.Models.Sample), "SamplesAndAdditionalService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagnostics_FP.Models.SamplesAndAdditionalService), true)]

#endregion

namespace Diagnostics_FP.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class mlabEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new mlabEntities object using the connection string found in the 'mlabEntities' section of the application configuration file.
        /// </summary>
        public mlabEntities() : base("name=mlabEntities", "mlabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mlabEntities object.
        /// </summary>
        public mlabEntities(string connectionString) : base(connectionString, "mlabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mlabEntities object.
        /// </summary>
        public mlabEntities(EntityConnection connection) : base(connection, "mlabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdditionalService> AdditionalServices
        {
            get
            {
                if ((_AdditionalServices == null))
                {
                    _AdditionalServices = base.CreateObjectSet<AdditionalService>("AdditionalServices");
                }
                return _AdditionalServices;
            }
        }
        private ObjectSet<AdditionalService> _AdditionalServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AntibioticType> AntibioticTypes
        {
            get
            {
                if ((_AntibioticTypes == null))
                {
                    _AntibioticTypes = base.CreateObjectSet<AntibioticType>("AntibioticTypes");
                }
                return _AntibioticTypes;
            }
        }
        private ObjectSet<AntibioticType> _AntibioticTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Center> Centers
        {
            get
            {
                if ((_Centers == null))
                {
                    _Centers = base.CreateObjectSet<Center>("Centers");
                }
                return _Centers;
            }
        }
        private ObjectSet<Center> _Centers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CentersAndProject> CentersAndProjects
        {
            get
            {
                if ((_CentersAndProjects == null))
                {
                    _CentersAndProjects = base.CreateObjectSet<CentersAndProject>("CentersAndProjects");
                }
                return _CentersAndProjects;
            }
        }
        private ObjectSet<CentersAndProject> _CentersAndProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicGroup> ClinicGroups
        {
            get
            {
                if ((_ClinicGroups == null))
                {
                    _ClinicGroups = base.CreateObjectSet<ClinicGroup>("ClinicGroups");
                }
                return _ClinicGroups;
            }
        }
        private ObjectSet<ClinicGroup> _ClinicGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicMaterialGroup> ClinicMaterialGroups
        {
            get
            {
                if ((_ClinicMaterialGroups == null))
                {
                    _ClinicMaterialGroups = base.CreateObjectSet<ClinicMaterialGroup>("ClinicMaterialGroups");
                }
                return _ClinicMaterialGroups;
            }
        }
        private ObjectSet<ClinicMaterialGroup> _ClinicMaterialGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicMaterial> ClinicMaterials
        {
            get
            {
                if ((_ClinicMaterials == null))
                {
                    _ClinicMaterials = base.CreateObjectSet<ClinicMaterial>("ClinicMaterials");
                }
                return _ClinicMaterials;
            }
        }
        private ObjectSet<ClinicMaterial> _ClinicMaterials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicPerson> ClinicPersons
        {
            get
            {
                if ((_ClinicPersons == null))
                {
                    _ClinicPersons = base.CreateObjectSet<ClinicPerson>("ClinicPersons");
                }
                return _ClinicPersons;
            }
        }
        private ObjectSet<ClinicPerson> _ClinicPersons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Clinic> Clinics
        {
            get
            {
                if ((_Clinics == null))
                {
                    _Clinics = base.CreateObjectSet<Clinic>("Clinics");
                }
                return _Clinics;
            }
        }
        private ObjectSet<Clinic> _Clinics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicsAndContract> ClinicsAndContracts
        {
            get
            {
                if ((_ClinicsAndContracts == null))
                {
                    _ClinicsAndContracts = base.CreateObjectSet<ClinicsAndContract>("ClinicsAndContracts");
                }
                return _ClinicsAndContracts;
            }
        }
        private ObjectSet<ClinicsAndContract> _ClinicsAndContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractsAndMBAnalysisType> ContractsAndMBAnalysisTypes
        {
            get
            {
                if ((_ContractsAndMBAnalysisTypes == null))
                {
                    _ContractsAndMBAnalysisTypes = base.CreateObjectSet<ContractsAndMBAnalysisType>("ContractsAndMBAnalysisTypes");
                }
                return _ContractsAndMBAnalysisTypes;
            }
        }
        private ObjectSet<ContractsAndMBAnalysisType> _ContractsAndMBAnalysisTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefaultProperty> DefaultProperties
        {
            get
            {
                if ((_DefaultProperties == null))
                {
                    _DefaultProperties = base.CreateObjectSet<DefaultProperty>("DefaultProperties");
                }
                return _DefaultProperties;
            }
        }
        private ObjectSet<DefaultProperty> _DefaultProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dtproperty> dtproperties
        {
            get
            {
                if ((_dtproperties == null))
                {
                    _dtproperties = base.CreateObjectSet<dtproperty>("dtproperties");
                }
                return _dtproperties;
            }
        }
        private ObjectSet<dtproperty> _dtproperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fenotype> Fenotypes
        {
            get
            {
                if ((_Fenotypes == null))
                {
                    _Fenotypes = base.CreateObjectSet<Fenotype>("Fenotypes");
                }
                return _Fenotypes;
            }
        }
        private ObjectSet<Fenotype> _Fenotypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Logic> Logics
        {
            get
            {
                if ((_Logics == null))
                {
                    _Logics = base.CreateObjectSet<Logic>("Logics");
                }
                return _Logics;
            }
        }
        private ObjectSet<Logic> _Logics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MBAnalysi> MBAnalysis
        {
            get
            {
                if ((_MBAnalysis == null))
                {
                    _MBAnalysis = base.CreateObjectSet<MBAnalysi>("MBAnalysis");
                }
                return _MBAnalysis;
            }
        }
        private ObjectSet<MBAnalysi> _MBAnalysis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MBAnalysisBacterioscopy> MBAnalysisBacterioscopies
        {
            get
            {
                if ((_MBAnalysisBacterioscopies == null))
                {
                    _MBAnalysisBacterioscopies = base.CreateObjectSet<MBAnalysisBacterioscopy>("MBAnalysisBacterioscopies");
                }
                return _MBAnalysisBacterioscopies;
            }
        }
        private ObjectSet<MBAnalysisBacterioscopy> _MBAnalysisBacterioscopies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MBAnalysisResult> MBAnalysisResults
        {
            get
            {
                if ((_MBAnalysisResults == null))
                {
                    _MBAnalysisResults = base.CreateObjectSet<MBAnalysisResult>("MBAnalysisResults");
                }
                return _MBAnalysisResults;
            }
        }
        private ObjectSet<MBAnalysisResult> _MBAnalysisResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MBAnalysisType> MBAnalysisTypes
        {
            get
            {
                if ((_MBAnalysisTypes == null))
                {
                    _MBAnalysisTypes = base.CreateObjectSet<MBAnalysisType>("MBAnalysisTypes");
                }
                return _MBAnalysisTypes;
            }
        }
        private ObjectSet<MBAnalysisType> _MBAnalysisTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MBBacterioscopyOrganismType> MBBacterioscopyOrganismTypes
        {
            get
            {
                if ((_MBBacterioscopyOrganismTypes == null))
                {
                    _MBBacterioscopyOrganismTypes = base.CreateObjectSet<MBBacterioscopyOrganismType>("MBBacterioscopyOrganismTypes");
                }
                return _MBBacterioscopyOrganismTypes;
            }
        }
        private ObjectSet<MBBacterioscopyOrganismType> _MBBacterioscopyOrganismTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MBStatus> MBStatuses
        {
            get
            {
                if ((_MBStatuses == null))
                {
                    _MBStatuses = base.CreateObjectSet<MBStatus>("MBStatuses");
                }
                return _MBStatuses;
            }
        }
        private ObjectSet<MBStatus> _MBStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Method> Methods
        {
            get
            {
                if ((_Methods == null))
                {
                    _Methods = base.CreateObjectSet<Method>("Methods");
                }
                return _Methods;
            }
        }
        private ObjectSet<Method> _Methods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganismType> OrganismTypes
        {
            get
            {
                if ((_OrganismTypes == null))
                {
                    _OrganismTypes = base.CreateObjectSet<OrganismType>("OrganismTypes");
                }
                return _OrganismTypes;
            }
        }
        private ObjectSet<OrganismType> _OrganismTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientStatusType> PatientStatusTypes
        {
            get
            {
                if ((_PatientStatusTypes == null))
                {
                    _PatientStatusTypes = base.CreateObjectSet<PatientStatusType>("PatientStatusTypes");
                }
                return _PatientStatusTypes;
            }
        }
        private ObjectSet<PatientStatusType> _PatientStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentType> PaymentTypes
        {
            get
            {
                if ((_PaymentTypes == null))
                {
                    _PaymentTypes = base.CreateObjectSet<PaymentType>("PaymentTypes");
                }
                return _PaymentTypes;
            }
        }
        private ObjectSet<PaymentType> _PaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RemoveReason> RemoveReasons
        {
            get
            {
                if ((_RemoveReasons == null))
                {
                    _RemoveReasons = base.CreateObjectSet<RemoveReason>("RemoveReasons");
                }
                return _RemoveReasons;
            }
        }
        private ObjectSet<RemoveReason> _RemoveReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RO> ROes
        {
            get
            {
                if ((_ROes == null))
                {
                    _ROes = base.CreateObjectSet<RO>("ROes");
                }
                return _ROes;
            }
        }
        private ObjectSet<RO> _ROes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROandClinicalTest> ROandClinicalTests
        {
            get
            {
                if ((_ROandClinicalTests == null))
                {
                    _ROandClinicalTests = base.CreateObjectSet<ROandClinicalTest>("ROandClinicalTests");
                }
                return _ROandClinicalTests;
            }
        }
        private ObjectSet<ROandClinicalTest> _ROandClinicalTests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROandComment> ROandComments
        {
            get
            {
                if ((_ROandComments == null))
                {
                    _ROandComments = base.CreateObjectSet<ROandComment>("ROandComments");
                }
                return _ROandComments;
            }
        }
        private ObjectSet<ROandComment> _ROandComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROandFenotype> ROandFenotypes
        {
            get
            {
                if ((_ROandFenotypes == null))
                {
                    _ROandFenotypes = base.CreateObjectSet<ROandFenotype>("ROandFenotypes");
                }
                return _ROandFenotypes;
            }
        }
        private ObjectSet<ROandFenotype> _ROandFenotypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROandProject> ROandProjects
        {
            get
            {
                if ((_ROandProjects == null))
                {
                    _ROandProjects = base.CreateObjectSet<ROandProject>("ROandProjects");
                }
                return _ROandProjects;
            }
        }
        private ObjectSet<ROandProject> _ROandProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROCharName> ROCharNames
        {
            get
            {
                if ((_ROCharNames == null))
                {
                    _ROCharNames = base.CreateObjectSet<ROCharName>("ROCharNames");
                }
                return _ROCharNames;
            }
        }
        private ObjectSet<ROCharName> _ROCharNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROChar> ROChars
        {
            get
            {
                if ((_ROChars == null))
                {
                    _ROChars = base.CreateObjectSet<ROChar>("ROChars");
                }
                return _ROChars;
            }
        }
        private ObjectSet<ROChar> _ROChars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SamplePaymentType> SamplePaymentTypes
        {
            get
            {
                if ((_SamplePaymentTypes == null))
                {
                    _SamplePaymentTypes = base.CreateObjectSet<SamplePaymentType>("SamplePaymentTypes");
                }
                return _SamplePaymentTypes;
            }
        }
        private ObjectSet<SamplePaymentType> _SamplePaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sample> Samples
        {
            get
            {
                if ((_Samples == null))
                {
                    _Samples = base.CreateObjectSet<Sample>("Samples");
                }
                return _Samples;
            }
        }
        private ObjectSet<Sample> _Samples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SamplesAndAdditionalService> SamplesAndAdditionalServices
        {
            get
            {
                if ((_SamplesAndAdditionalServices == null))
                {
                    _SamplesAndAdditionalServices = base.CreateObjectSet<SamplesAndAdditionalService>("SamplesAndAdditionalServices");
                }
                return _SamplesAndAdditionalServices;
            }
        }
        private ObjectSet<SamplesAndAdditionalService> _SamplesAndAdditionalServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Value> Values
        {
            get
            {
                if ((_Values == null))
                {
                    _Values = base.CreateObjectSet<Value>("Values");
                }
                return _Values;
            }
        }
        private ObjectSet<Value> _Values;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_AdditionalServiceListWithLogic> vw_AdditionalServiceListWithLogic
        {
            get
            {
                if ((_vw_AdditionalServiceListWithLogic == null))
                {
                    _vw_AdditionalServiceListWithLogic = base.CreateObjectSet<vw_AdditionalServiceListWithLogic>("vw_AdditionalServiceListWithLogic");
                }
                return _vw_AdditionalServiceListWithLogic;
            }
        }
        private ObjectSet<vw_AdditionalServiceListWithLogic> _vw_AdditionalServiceListWithLogic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_ClinicList> vw_ClinicList
        {
            get
            {
                if ((_vw_ClinicList == null))
                {
                    _vw_ClinicList = base.CreateObjectSet<vw_ClinicList>("vw_ClinicList");
                }
                return _vw_ClinicList;
            }
        }
        private ObjectSet<vw_ClinicList> _vw_ClinicList;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_MBAnalysisTypeWithLogic> vw_MBAnalysisTypeWithLogic
        {
            get
            {
                if ((_vw_MBAnalysisTypeWithLogic == null))
                {
                    _vw_MBAnalysisTypeWithLogic = base.CreateObjectSet<vw_MBAnalysisTypeWithLogic>("vw_MBAnalysisTypeWithLogic");
                }
                return _vw_MBAnalysisTypeWithLogic;
            }
        }
        private ObjectSet<vw_MBAnalysisTypeWithLogic> _vw_MBAnalysisTypeWithLogic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwClinicContractMBAnalysisPrice> vwClinicContractMBAnalysisPrices
        {
            get
            {
                if ((_vwClinicContractMBAnalysisPrices == null))
                {
                    _vwClinicContractMBAnalysisPrices = base.CreateObjectSet<vwClinicContractMBAnalysisPrice>("vwClinicContractMBAnalysisPrices");
                }
                return _vwClinicContractMBAnalysisPrices;
            }
        }
        private ObjectSet<vwClinicContractMBAnalysisPrice> _vwClinicContractMBAnalysisPrices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwContract_Clinic_Analysis_ClinicMaterial_ForReports> vwContract_Clinic_Analysis_ClinicMaterial_ForReports
        {
            get
            {
                if ((_vwContract_Clinic_Analysis_ClinicMaterial_ForReports == null))
                {
                    _vwContract_Clinic_Analysis_ClinicMaterial_ForReports = base.CreateObjectSet<vwContract_Clinic_Analysis_ClinicMaterial_ForReports>("vwContract_Clinic_Analysis_ClinicMaterial_ForReports");
                }
                return _vwContract_Clinic_Analysis_ClinicMaterial_ForReports;
            }
        }
        private ObjectSet<vwContract_Clinic_Analysis_ClinicMaterial_ForReports> _vwContract_Clinic_Analysis_ClinicMaterial_ForReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwMBAnalysis_Bacterioscopy> vwMBAnalysis_Bacterioscopy
        {
            get
            {
                if ((_vwMBAnalysis_Bacterioscopy == null))
                {
                    _vwMBAnalysis_Bacterioscopy = base.CreateObjectSet<vwMBAnalysis_Bacterioscopy>("vwMBAnalysis_Bacterioscopy");
                }
                return _vwMBAnalysis_Bacterioscopy;
            }
        }
        private ObjectSet<vwMBAnalysis_Bacterioscopy> _vwMBAnalysis_Bacterioscopy;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwMBAnalysisForSample> vwMBAnalysisForSamples
        {
            get
            {
                if ((_vwMBAnalysisForSamples == null))
                {
                    _vwMBAnalysisForSamples = base.CreateObjectSet<vwMBAnalysisForSample>("vwMBAnalysisForSamples");
                }
                return _vwMBAnalysisForSamples;
            }
        }
        private ObjectSet<vwMBAnalysisForSample> _vwMBAnalysisForSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwMBAnalysisForSampleWithPrice> vwMBAnalysisForSampleWithPrices
        {
            get
            {
                if ((_vwMBAnalysisForSampleWithPrices == null))
                {
                    _vwMBAnalysisForSampleWithPrices = base.CreateObjectSet<vwMBAnalysisForSampleWithPrice>("vwMBAnalysisForSampleWithPrices");
                }
                return _vwMBAnalysisForSampleWithPrices;
            }
        }
        private ObjectSet<vwMBAnalysisForSampleWithPrice> _vwMBAnalysisForSampleWithPrices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwRO_ClinicalTests> vwRO_ClinicalTests
        {
            get
            {
                if ((_vwRO_ClinicalTests == null))
                {
                    _vwRO_ClinicalTests = base.CreateObjectSet<vwRO_ClinicalTests>("vwRO_ClinicalTests");
                }
                return _vwRO_ClinicalTests;
            }
        }
        private ObjectSet<vwRO_ClinicalTests> _vwRO_ClinicalTests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwTotalInfoForReport> vwTotalInfoForReports
        {
            get
            {
                if ((_vwTotalInfoForReports == null))
                {
                    _vwTotalInfoForReports = base.CreateObjectSet<vwTotalInfoForReport>("vwTotalInfoForReports");
                }
                return _vwTotalInfoForReports;
            }
        }
        private ObjectSet<vwTotalInfoForReport> _vwTotalInfoForReports;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdditionalServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdditionalServices(AdditionalService additionalService)
        {
            base.AddObject("AdditionalServices", additionalService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AntibioticTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAntibioticTypes(AntibioticType antibioticType)
        {
            base.AddObject("AntibioticTypes", antibioticType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Centers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCenters(Center center)
        {
            base.AddObject("Centers", center);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CentersAndProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCentersAndProjects(CentersAndProject centersAndProject)
        {
            base.AddObject("CentersAndProjects", centersAndProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicGroups(ClinicGroup clinicGroup)
        {
            base.AddObject("ClinicGroups", clinicGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicMaterialGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicMaterialGroups(ClinicMaterialGroup clinicMaterialGroup)
        {
            base.AddObject("ClinicMaterialGroups", clinicMaterialGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicMaterials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicMaterials(ClinicMaterial clinicMaterial)
        {
            base.AddObject("ClinicMaterials", clinicMaterial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicPersons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicPersons(ClinicPerson clinicPerson)
        {
            base.AddObject("ClinicPersons", clinicPerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clinics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinics(Clinic clinic)
        {
            base.AddObject("Clinics", clinic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicsAndContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicsAndContracts(ClinicsAndContract clinicsAndContract)
        {
            base.AddObject("ClinicsAndContracts", clinicsAndContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractsAndMBAnalysisTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractsAndMBAnalysisTypes(ContractsAndMBAnalysisType contractsAndMBAnalysisType)
        {
            base.AddObject("ContractsAndMBAnalysisTypes", contractsAndMBAnalysisType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefaultProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefaultProperties(DefaultProperty defaultProperty)
        {
            base.AddObject("DefaultProperties", defaultProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dtproperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodtproperties(dtproperty dtproperty)
        {
            base.AddObject("dtproperties", dtproperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fenotypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFenotypes(Fenotype fenotype)
        {
            base.AddObject("Fenotypes", fenotype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogics(Logic logic)
        {
            base.AddObject("Logics", logic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MBAnalysis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMBAnalysis(MBAnalysi mBAnalysi)
        {
            base.AddObject("MBAnalysis", mBAnalysi);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MBAnalysisBacterioscopies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMBAnalysisBacterioscopies(MBAnalysisBacterioscopy mBAnalysisBacterioscopy)
        {
            base.AddObject("MBAnalysisBacterioscopies", mBAnalysisBacterioscopy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MBAnalysisResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMBAnalysisResults(MBAnalysisResult mBAnalysisResult)
        {
            base.AddObject("MBAnalysisResults", mBAnalysisResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MBAnalysisTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMBAnalysisTypes(MBAnalysisType mBAnalysisType)
        {
            base.AddObject("MBAnalysisTypes", mBAnalysisType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MBBacterioscopyOrganismTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMBBacterioscopyOrganismTypes(MBBacterioscopyOrganismType mBBacterioscopyOrganismType)
        {
            base.AddObject("MBBacterioscopyOrganismTypes", mBBacterioscopyOrganismType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MBStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMBStatuses(MBStatus mBStatus)
        {
            base.AddObject("MBStatuses", mBStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Methods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMethods(Method method)
        {
            base.AddObject("Methods", method);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganismTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganismTypes(OrganismType organismType)
        {
            base.AddObject("OrganismTypes", organismType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientStatusTypes(PatientStatusType patientStatusType)
        {
            base.AddObject("PatientStatusTypes", patientStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentTypes(PaymentType paymentType)
        {
            base.AddObject("PaymentTypes", paymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RemoveReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRemoveReasons(RemoveReason removeReason)
        {
            base.AddObject("RemoveReasons", removeReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROes(RO rO)
        {
            base.AddObject("ROes", rO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROandClinicalTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROandClinicalTests(ROandClinicalTest rOandClinicalTest)
        {
            base.AddObject("ROandClinicalTests", rOandClinicalTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROandComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROandComments(ROandComment rOandComment)
        {
            base.AddObject("ROandComments", rOandComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROandFenotypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROandFenotypes(ROandFenotype rOandFenotype)
        {
            base.AddObject("ROandFenotypes", rOandFenotype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROandProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROandProjects(ROandProject rOandProject)
        {
            base.AddObject("ROandProjects", rOandProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROCharNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROCharNames(ROCharName rOCharName)
        {
            base.AddObject("ROCharNames", rOCharName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROChars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROChars(ROChar rOChar)
        {
            base.AddObject("ROChars", rOChar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SamplePaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSamplePaymentTypes(SamplePaymentType samplePaymentType)
        {
            base.AddObject("SamplePaymentTypes", samplePaymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Samples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSamples(Sample sample)
        {
            base.AddObject("Samples", sample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SamplesAndAdditionalServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSamplesAndAdditionalServices(SamplesAndAdditionalService samplesAndAdditionalService)
        {
            base.AddObject("SamplesAndAdditionalServices", samplesAndAdditionalService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Values EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToValues(Value value)
        {
            base.AddObject("Values", value);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_AdditionalServiceListWithLogic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_AdditionalServiceListWithLogic(vw_AdditionalServiceListWithLogic vw_AdditionalServiceListWithLogic)
        {
            base.AddObject("vw_AdditionalServiceListWithLogic", vw_AdditionalServiceListWithLogic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_ClinicList EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_ClinicList(vw_ClinicList vw_ClinicList)
        {
            base.AddObject("vw_ClinicList", vw_ClinicList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_MBAnalysisTypeWithLogic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_MBAnalysisTypeWithLogic(vw_MBAnalysisTypeWithLogic vw_MBAnalysisTypeWithLogic)
        {
            base.AddObject("vw_MBAnalysisTypeWithLogic", vw_MBAnalysisTypeWithLogic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwClinicContractMBAnalysisPrices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwClinicContractMBAnalysisPrices(vwClinicContractMBAnalysisPrice vwClinicContractMBAnalysisPrice)
        {
            base.AddObject("vwClinicContractMBAnalysisPrices", vwClinicContractMBAnalysisPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwContract_Clinic_Analysis_ClinicMaterial_ForReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwContract_Clinic_Analysis_ClinicMaterial_ForReports(vwContract_Clinic_Analysis_ClinicMaterial_ForReports vwContract_Clinic_Analysis_ClinicMaterial_ForReports)
        {
            base.AddObject("vwContract_Clinic_Analysis_ClinicMaterial_ForReports", vwContract_Clinic_Analysis_ClinicMaterial_ForReports);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwMBAnalysis_Bacterioscopy EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwMBAnalysis_Bacterioscopy(vwMBAnalysis_Bacterioscopy vwMBAnalysis_Bacterioscopy)
        {
            base.AddObject("vwMBAnalysis_Bacterioscopy", vwMBAnalysis_Bacterioscopy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwMBAnalysisForSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwMBAnalysisForSamples(vwMBAnalysisForSample vwMBAnalysisForSample)
        {
            base.AddObject("vwMBAnalysisForSamples", vwMBAnalysisForSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwMBAnalysisForSampleWithPrices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwMBAnalysisForSampleWithPrices(vwMBAnalysisForSampleWithPrice vwMBAnalysisForSampleWithPrice)
        {
            base.AddObject("vwMBAnalysisForSampleWithPrices", vwMBAnalysisForSampleWithPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwRO_ClinicalTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwRO_ClinicalTests(vwRO_ClinicalTests vwRO_ClinicalTests)
        {
            base.AddObject("vwRO_ClinicalTests", vwRO_ClinicalTests);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwTotalInfoForReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwTotalInfoForReports(vwTotalInfoForReport vwTotalInfoForReport)
        {
            base.AddObject("vwTotalInfoForReports", vwTotalInfoForReport);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="AdditionalService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdditionalService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdditionalService object.
        /// </summary>
        /// <param name="additionalServiceID">Initial value of the AdditionalServiceID property.</param>
        public static AdditionalService CreateAdditionalService(global::System.Int32 additionalServiceID)
        {
            AdditionalService additionalService = new AdditionalService();
            additionalService.AdditionalServiceID = additionalServiceID;
            return additionalService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdditionalServiceID
        {
            get
            {
                return _AdditionalServiceID;
            }
            set
            {
                if (_AdditionalServiceID != value)
                {
                    OnAdditionalServiceIDChanging(value);
                    ReportPropertyChanging("AdditionalServiceID");
                    _AdditionalServiceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdditionalServiceID");
                    OnAdditionalServiceIDChanged();
                }
            }
        }
        private global::System.Int32 _AdditionalServiceID;
        partial void OnAdditionalServiceIDChanging(global::System.Int32 value);
        partial void OnAdditionalServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsInUse
        {
            get
            {
                return _IsInUse;
            }
            set
            {
                OnIsInUseChanging(value);
                ReportPropertyChanging("IsInUse");
                _IsInUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInUse");
                OnIsInUseChanged();
            }
        }
        private Nullable<global::System.Int32> _IsInUse;
        partial void OnIsInUseChanging(Nullable<global::System.Int32> value);
        partial void OnIsInUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "SamplesAndAdditionalService")]
        public EntityCollection<SamplesAndAdditionalService> SamplesAndAdditionalServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SamplesAndAdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "SamplesAndAdditionalService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SamplesAndAdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "SamplesAndAdditionalService", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="AntibioticType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AntibioticType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AntibioticType object.
        /// </summary>
        /// <param name="antibioticTypeID">Initial value of the AntibioticTypeID property.</param>
        public static AntibioticType CreateAntibioticType(global::System.Int32 antibioticTypeID)
        {
            AntibioticType antibioticType = new AntibioticType();
            antibioticType.AntibioticTypeID = antibioticTypeID;
            return antibioticType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AntibioticTypeID
        {
            get
            {
                return _AntibioticTypeID;
            }
            set
            {
                if (_AntibioticTypeID != value)
                {
                    OnAntibioticTypeIDChanging(value);
                    ReportPropertyChanging("AntibioticTypeID");
                    _AntibioticTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AntibioticTypeID");
                    OnAntibioticTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AntibioticTypeID;
        partial void OnAntibioticTypeIDChanging(global::System.Int32 value);
        partial void OnAntibioticTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "ROandClinicalTest")]
        public EntityCollection<ROandClinicalTest> ROandClinicalTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandClinicalTest>("mlabModel.FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "ROandClinicalTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandClinicalTest>("mlabModel.FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "ROandClinicalTest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Center")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Center : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Center object.
        /// </summary>
        /// <param name="centerID">Initial value of the CenterID property.</param>
        public static Center CreateCenter(global::System.Int32 centerID)
        {
            Center center = new Center();
            center.CenterID = centerID;
            return center;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CenterID
        {
            get
            {
                return _CenterID;
            }
            set
            {
                if (_CenterID != value)
                {
                    OnCenterIDChanging(value);
                    ReportPropertyChanging("CenterID");
                    _CenterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CenterID");
                    OnCenterIDChanged();
                }
            }
        }
        private global::System.Int32 _CenterID;
        partial void OnCenterIDChanging(global::System.Int32 value);
        partial void OnCenterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEnd
        {
            get
            {
                return _DescriptionEnd;
            }
            set
            {
                OnDescriptionEndChanging(value);
                ReportPropertyChanging("DescriptionEnd");
                _DescriptionEnd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEnd");
                OnDescriptionEndChanged();
            }
        }
        private global::System.String _DescriptionEnd;
        partial void OnDescriptionEndChanging(global::System.String value);
        partial void OnDescriptionEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CENTER_PROJECT_CENTER", "CentersAndProject")]
        public EntityCollection<CentersAndProject> CentersAndProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CentersAndProject>("mlabModel.FK_CENTER_PROJECT_CENTER", "CentersAndProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CentersAndProject>("mlabModel.FK_CENTER_PROJECT_CENTER", "CentersAndProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="CentersAndProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CentersAndProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CentersAndProject object.
        /// </summary>
        /// <param name="centerProjectID">Initial value of the CenterProjectID property.</param>
        public static CentersAndProject CreateCentersAndProject(global::System.Int32 centerProjectID)
        {
            CentersAndProject centersAndProject = new CentersAndProject();
            centersAndProject.CenterProjectID = centerProjectID;
            return centersAndProject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CenterProjectID
        {
            get
            {
                return _CenterProjectID;
            }
            set
            {
                if (_CenterProjectID != value)
                {
                    OnCenterProjectIDChanging(value);
                    ReportPropertyChanging("CenterProjectID");
                    _CenterProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CenterProjectID");
                    OnCenterProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _CenterProjectID;
        partial void OnCenterProjectIDChanging(global::System.Int32 value);
        partial void OnCenterProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CenterID
        {
            get
            {
                return _CenterID;
            }
            set
            {
                OnCenterIDChanging(value);
                ReportPropertyChanging("CenterID");
                _CenterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CenterID");
                OnCenterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CenterID;
        partial void OnCenterIDChanging(Nullable<global::System.Int32> value);
        partial void OnCenterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberInProject
        {
            get
            {
                return _NumberInProject;
            }
            set
            {
                OnNumberInProjectChanging(value);
                ReportPropertyChanging("NumberInProject");
                _NumberInProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberInProject");
                OnNumberInProjectChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberInProject;
        partial void OnNumberInProjectChanging(Nullable<global::System.Int32> value);
        partial void OnNumberInProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CENTER_PROJECT_CENTER", "Center")]
        public Center Center
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Center>("mlabModel.FK_CENTER_PROJECT_CENTER", "Center").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Center>("mlabModel.FK_CENTER_PROJECT_CENTER", "Center").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Center> CenterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Center>("mlabModel.FK_CENTER_PROJECT_CENTER", "Center");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Center>("mlabModel.FK_CENTER_PROJECT_CENTER", "Center", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CENTER_PROJECT_PROJECT", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_CENTER_PROJECT_PROJECT", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_CENTER_PROJECT_PROJECT", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_CENTER_PROJECT_PROJECT", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("mlabModel.FK_CENTER_PROJECT_PROJECT", "Project", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        public static City CreateCity(global::System.Int32 cityID)
        {
            City city = new City();
            city.CityID = cityID;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Clinic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clinic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Clinic object.
        /// </summary>
        /// <param name="clinicID">Initial value of the ClinicID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Clinic CreateClinic(global::System.Int32 clinicID, global::System.String description)
        {
            Clinic clinic = new Clinic();
            clinic.ClinicID = clinicID;
            clinic.Description = description;
            return clinic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                if (_ClinicID != value)
                {
                    OnClinicIDChanging(value);
                    ReportPropertyChanging("ClinicID");
                    _ClinicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicID");
                    OnClinicIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicID;
        partial void OnClinicIDChanging(global::System.Int32 value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClinicGroupID
        {
            get
            {
                return _ClinicGroupID;
            }
            set
            {
                OnClinicGroupIDChanging(value);
                ReportPropertyChanging("ClinicGroupID");
                _ClinicGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicGroupID");
                OnClinicGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClinicGroupID;
        partial void OnClinicGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnClinicGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_CLINIC_GROUP", "ClinicGroup")]
        public ClinicGroup ClinicGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicGroup>("mlabModel.FK_CLINIC_CLINIC_GROUP", "ClinicGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicGroup>("mlabModel.FK_CLINIC_CLINIC_GROUP", "ClinicGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClinicGroup> ClinicGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicGroup>("mlabModel.FK_CLINIC_CLINIC_GROUP", "ClinicGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClinicGroup>("mlabModel.FK_CLINIC_CLINIC_GROUP", "ClinicGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_PERSON_CLINIC", "ClinicPerson")]
        public EntityCollection<ClinicPerson> ClinicPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClinicPerson>("mlabModel.FK_CLINIC_PERSON_CLINIC", "ClinicPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClinicPerson>("mlabModel.FK_CLINIC_PERSON_CLINIC", "ClinicPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_CONTRACT_CLINIC", "ClinicsAndContract")]
        public EntityCollection<ClinicsAndContract> ClinicsAndContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClinicsAndContract>("mlabModel.FK_CLINIC_CONTRACT_CLINIC", "ClinicsAndContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClinicsAndContract>("mlabModel.FK_CLINIC_CONTRACT_CLINIC", "ClinicsAndContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_CLINIC", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_CLINIC", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_CLINIC", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ClinicGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicGroup object.
        /// </summary>
        /// <param name="clinicGroupID">Initial value of the ClinicGroupID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static ClinicGroup CreateClinicGroup(global::System.Int32 clinicGroupID, global::System.String description)
        {
            ClinicGroup clinicGroup = new ClinicGroup();
            clinicGroup.ClinicGroupID = clinicGroupID;
            clinicGroup.Description = description;
            return clinicGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicGroupID
        {
            get
            {
                return _ClinicGroupID;
            }
            set
            {
                if (_ClinicGroupID != value)
                {
                    OnClinicGroupIDChanging(value);
                    ReportPropertyChanging("ClinicGroupID");
                    _ClinicGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicGroupID");
                    OnClinicGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicGroupID;
        partial void OnClinicGroupIDChanging(global::System.Int32 value);
        partial void OnClinicGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_CLINIC_GROUP", "Clinic")]
        public EntityCollection<Clinic> Clinics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clinic>("mlabModel.FK_CLINIC_CLINIC_GROUP", "Clinic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clinic>("mlabModel.FK_CLINIC_CLINIC_GROUP", "Clinic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ClinicMaterial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicMaterial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicMaterial object.
        /// </summary>
        /// <param name="clinicMaterialID">Initial value of the ClinicMaterialID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static ClinicMaterial CreateClinicMaterial(global::System.Int32 clinicMaterialID, global::System.String description)
        {
            ClinicMaterial clinicMaterial = new ClinicMaterial();
            clinicMaterial.ClinicMaterialID = clinicMaterialID;
            clinicMaterial.Description = description;
            return clinicMaterial;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicMaterialID
        {
            get
            {
                return _ClinicMaterialID;
            }
            set
            {
                if (_ClinicMaterialID != value)
                {
                    OnClinicMaterialIDChanging(value);
                    ReportPropertyChanging("ClinicMaterialID");
                    _ClinicMaterialID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicMaterialID");
                    OnClinicMaterialIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicMaterialID;
        partial void OnClinicMaterialIDChanging(global::System.Int32 value);
        partial void OnClinicMaterialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClinicMaterialGroupID
        {
            get
            {
                return _ClinicMaterialGroupID;
            }
            set
            {
                OnClinicMaterialGroupIDChanging(value);
                ReportPropertyChanging("ClinicMaterialGroupID");
                _ClinicMaterialGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicMaterialGroupID");
                OnClinicMaterialGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClinicMaterialGroupID;
        partial void OnClinicMaterialGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnClinicMaterialGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterialGroup")]
        public ClinicMaterialGroup ClinicMaterialGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicMaterialGroup>("mlabModel.FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterialGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicMaterialGroup>("mlabModel.FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterialGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClinicMaterialGroup> ClinicMaterialGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicMaterialGroup>("mlabModel.FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterialGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClinicMaterialGroup>("mlabModel.FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterialGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_CLINIC_MATERIAL", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_CLINIC_MATERIAL", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_CLINIC_MATERIAL", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ClinicMaterialGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicMaterialGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicMaterialGroup object.
        /// </summary>
        /// <param name="clinicMaterialGroupID">Initial value of the ClinicMaterialGroupID property.</param>
        /// <param name="descriptionEng">Initial value of the DescriptionEng property.</param>
        public static ClinicMaterialGroup CreateClinicMaterialGroup(global::System.Int32 clinicMaterialGroupID, global::System.String descriptionEng)
        {
            ClinicMaterialGroup clinicMaterialGroup = new ClinicMaterialGroup();
            clinicMaterialGroup.ClinicMaterialGroupID = clinicMaterialGroupID;
            clinicMaterialGroup.DescriptionEng = descriptionEng;
            return clinicMaterialGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicMaterialGroupID
        {
            get
            {
                return _ClinicMaterialGroupID;
            }
            set
            {
                if (_ClinicMaterialGroupID != value)
                {
                    OnClinicMaterialGroupIDChanging(value);
                    ReportPropertyChanging("ClinicMaterialGroupID");
                    _ClinicMaterialGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicMaterialGroupID");
                    OnClinicMaterialGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicMaterialGroupID;
        partial void OnClinicMaterialGroupIDChanging(global::System.Int32 value);
        partial void OnClinicMaterialGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterial")]
        public EntityCollection<ClinicMaterial> ClinicMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClinicMaterial>("mlabModel.FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClinicMaterial>("mlabModel.FK_SAMPLE_TYPE_SAMPLE_TYPE_GROUP", "ClinicMaterial", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ClinicPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicPerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicPerson object.
        /// </summary>
        /// <param name="clinicPersonID">Initial value of the ClinicPersonID property.</param>
        /// <param name="clinicID">Initial value of the ClinicID property.</param>
        public static ClinicPerson CreateClinicPerson(global::System.Int32 clinicPersonID, global::System.Int32 clinicID)
        {
            ClinicPerson clinicPerson = new ClinicPerson();
            clinicPerson.ClinicPersonID = clinicPersonID;
            clinicPerson.ClinicID = clinicID;
            return clinicPerson;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicPersonID
        {
            get
            {
                return _ClinicPersonID;
            }
            set
            {
                if (_ClinicPersonID != value)
                {
                    OnClinicPersonIDChanging(value);
                    ReportPropertyChanging("ClinicPersonID");
                    _ClinicPersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicPersonID");
                    OnClinicPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicPersonID;
        partial void OnClinicPersonIDChanging(global::System.Int32 value);
        partial void OnClinicPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                OnClinicIDChanging(value);
                ReportPropertyChanging("ClinicID");
                _ClinicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicID");
                OnClinicIDChanged();
            }
        }
        private global::System.Int32 _ClinicID;
        partial void OnClinicIDChanging(global::System.Int32 value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonName
        {
            get
            {
                return _PersonName;
            }
            set
            {
                OnPersonNameChanging(value);
                ReportPropertyChanging("PersonName");
                _PersonName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersonName");
                OnPersonNameChanged();
            }
        }
        private global::System.String _PersonName;
        partial void OnPersonNameChanging(global::System.String value);
        partial void OnPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonPost
        {
            get
            {
                return _PersonPost;
            }
            set
            {
                OnPersonPostChanging(value);
                ReportPropertyChanging("PersonPost");
                _PersonPost = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersonPost");
                OnPersonPostChanged();
            }
        }
        private global::System.String _PersonPost;
        partial void OnPersonPostChanging(global::System.String value);
        partial void OnPersonPostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_PERSON_CLINIC", "Clinic")]
        public Clinic Clinic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_CLINIC_PERSON_CLINIC", "Clinic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_CLINIC_PERSON_CLINIC", "Clinic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clinic> ClinicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_CLINIC_PERSON_CLINIC", "Clinic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clinic>("mlabModel.FK_CLINIC_PERSON_CLINIC", "Clinic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ClinicsAndContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicsAndContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicsAndContract object.
        /// </summary>
        /// <param name="clinicContractID">Initial value of the ClinicContractID property.</param>
        /// <param name="clinicID">Initial value of the ClinicID property.</param>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        public static ClinicsAndContract CreateClinicsAndContract(global::System.Int32 clinicContractID, global::System.Int32 clinicID, global::System.Int32 contractID)
        {
            ClinicsAndContract clinicsAndContract = new ClinicsAndContract();
            clinicsAndContract.ClinicContractID = clinicContractID;
            clinicsAndContract.ClinicID = clinicID;
            clinicsAndContract.ContractID = contractID;
            return clinicsAndContract;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicContractID
        {
            get
            {
                return _ClinicContractID;
            }
            set
            {
                if (_ClinicContractID != value)
                {
                    OnClinicContractIDChanging(value);
                    ReportPropertyChanging("ClinicContractID");
                    _ClinicContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicContractID");
                    OnClinicContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicContractID;
        partial void OnClinicContractIDChanging(global::System.Int32 value);
        partial void OnClinicContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                OnClinicIDChanging(value);
                ReportPropertyChanging("ClinicID");
                _ClinicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicID");
                OnClinicIDChanged();
            }
        }
        private global::System.Int32 _ClinicID;
        partial void OnClinicIDChanging(global::System.Int32 value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                OnContractIDChanging(value);
                ReportPropertyChanging("ContractID");
                _ContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractID");
                OnContractIDChanged();
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_CONTRACT_CLINIC", "Clinic")]
        public Clinic Clinic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_CLINIC_CONTRACT_CLINIC", "Clinic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_CLINIC_CONTRACT_CLINIC", "Clinic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clinic> ClinicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_CLINIC_CONTRACT_CLINIC", "Clinic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clinic>("mlabModel.FK_CLINIC_CONTRACT_CLINIC", "Clinic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_CONTRACT_CONTRACT", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("mlabModel.FK_CLINIC_CONTRACT_CONTRACT", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("mlabModel.FK_CLINIC_CONTRACT_CONTRACT", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("mlabModel.FK_CLINIC_CONTRACT_CONTRACT", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("mlabModel.FK_CLINIC_CONTRACT_CONTRACT", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_CLINIC_CONTRACT", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_CLINIC_CONTRACT", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_CLINIC_CONTRACT", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        public static Comment CreateComment(global::System.Int32 commentID)
        {
            Comment comment = new Comment();
            comment.CommentID = commentID;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Int32 _CommentID;
        partial void OnCommentIDChanging(global::System.Int32 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_COMMENT_COMMENT", "ROandComment")]
        public EntityCollection<ROandComment> ROandComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandComment>("mlabModel.FK_RO_COMMENT_COMMENT", "ROandComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandComment>("mlabModel.FK_RO_COMMENT_COMMENT", "ROandComment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Contract CreateContract(global::System.Int32 contractID, global::System.String code)
        {
            Contract contract = new Contract();
            contract.ContractID = contractID;
            contract.Code = code;
            return contract;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                if (_ContractID != value)
                {
                    OnContractIDChanging(value);
                    ReportPropertyChanging("ContractID");
                    _ContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractID");
                    OnContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStart;
        partial void OnDateStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsAutoGenerate
        {
            get
            {
                return _IsAutoGenerate;
            }
            set
            {
                OnIsAutoGenerateChanging(value);
                ReportPropertyChanging("IsAutoGenerate");
                _IsAutoGenerate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAutoGenerate");
                OnIsAutoGenerateChanged();
            }
        }
        private Nullable<global::System.Int32> _IsAutoGenerate;
        partial void OnIsAutoGenerateChanging(Nullable<global::System.Int32> value);
        partial void OnIsAutoGenerateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CLINIC_CONTRACT_CONTRACT", "ClinicsAndContract")]
        public EntityCollection<ClinicsAndContract> ClinicsAndContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClinicsAndContract>("mlabModel.FK_CLINIC_CONTRACT_CONTRACT", "ClinicsAndContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClinicsAndContract>("mlabModel.FK_CLINIC_CONTRACT_CONTRACT", "ClinicsAndContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "ContractsAndMBAnalysisType")]
        public EntityCollection<ContractsAndMBAnalysisType> ContractsAndMBAnalysisTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractsAndMBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "ContractsAndMBAnalysisType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractsAndMBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "ContractsAndMBAnalysisType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ContractsAndMBAnalysisType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractsAndMBAnalysisType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractsAndMBAnalysisType object.
        /// </summary>
        /// <param name="contractAndMBAnalysisTypeID">Initial value of the ContractAndMBAnalysisTypeID property.</param>
        public static ContractsAndMBAnalysisType CreateContractsAndMBAnalysisType(global::System.Int32 contractAndMBAnalysisTypeID)
        {
            ContractsAndMBAnalysisType contractsAndMBAnalysisType = new ContractsAndMBAnalysisType();
            contractsAndMBAnalysisType.ContractAndMBAnalysisTypeID = contractAndMBAnalysisTypeID;
            return contractsAndMBAnalysisType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractAndMBAnalysisTypeID
        {
            get
            {
                return _ContractAndMBAnalysisTypeID;
            }
            set
            {
                if (_ContractAndMBAnalysisTypeID != value)
                {
                    OnContractAndMBAnalysisTypeIDChanging(value);
                    ReportPropertyChanging("ContractAndMBAnalysisTypeID");
                    _ContractAndMBAnalysisTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractAndMBAnalysisTypeID");
                    OnContractAndMBAnalysisTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractAndMBAnalysisTypeID;
        partial void OnContractAndMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnContractAndMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                OnContractIDChanging(value);
                ReportPropertyChanging("ContractID");
                _ContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractID");
                OnContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractID;
        partial void OnContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                OnMBAnalysisTypeIDChanging(value);
                ReportPropertyChanging("MBAnalysisTypeID");
                _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisTypeID");
                OnMBAnalysisTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentTypeID
        {
            get
            {
                return _PaymentTypeID;
            }
            set
            {
                OnPaymentTypeIDChanging(value);
                ReportPropertyChanging("PaymentTypeID");
                _PaymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTypeID");
                OnPaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentTypeID;
        partial void OnPaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_CONTRACT", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "MBAnalysisType")]
        public MBAnalysisType MBAnalysisType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "MBAnalysisType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "MBAnalysisType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBAnalysisType> MBAnalysisTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "MBAnalysisType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "MBAnalysisType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "PaymentType")]
        public PaymentType PaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "PaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "PaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentType> PaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "PaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "PaymentType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="DefaultProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefaultProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefaultProperty object.
        /// </summary>
        /// <param name="defaultPropertyID">Initial value of the DefaultPropertyID property.</param>
        /// <param name="defaultPropertyName">Initial value of the DefaultPropertyName property.</param>
        /// <param name="defaultPropertyDesc">Initial value of the DefaultPropertyDesc property.</param>
        /// <param name="defaultPropertyValue">Initial value of the DefaultPropertyValue property.</param>
        public static DefaultProperty CreateDefaultProperty(global::System.Int32 defaultPropertyID, global::System.String defaultPropertyName, global::System.String defaultPropertyDesc, global::System.Int32 defaultPropertyValue)
        {
            DefaultProperty defaultProperty = new DefaultProperty();
            defaultProperty.DefaultPropertyID = defaultPropertyID;
            defaultProperty.DefaultPropertyName = defaultPropertyName;
            defaultProperty.DefaultPropertyDesc = defaultPropertyDesc;
            defaultProperty.DefaultPropertyValue = defaultPropertyValue;
            return defaultProperty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefaultPropertyID
        {
            get
            {
                return _DefaultPropertyID;
            }
            set
            {
                if (_DefaultPropertyID != value)
                {
                    OnDefaultPropertyIDChanging(value);
                    ReportPropertyChanging("DefaultPropertyID");
                    _DefaultPropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DefaultPropertyID");
                    OnDefaultPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _DefaultPropertyID;
        partial void OnDefaultPropertyIDChanging(global::System.Int32 value);
        partial void OnDefaultPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DefaultPropertyName
        {
            get
            {
                return _DefaultPropertyName;
            }
            set
            {
                OnDefaultPropertyNameChanging(value);
                ReportPropertyChanging("DefaultPropertyName");
                _DefaultPropertyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DefaultPropertyName");
                OnDefaultPropertyNameChanged();
            }
        }
        private global::System.String _DefaultPropertyName;
        partial void OnDefaultPropertyNameChanging(global::System.String value);
        partial void OnDefaultPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DefaultPropertyDesc
        {
            get
            {
                return _DefaultPropertyDesc;
            }
            set
            {
                OnDefaultPropertyDescChanging(value);
                ReportPropertyChanging("DefaultPropertyDesc");
                _DefaultPropertyDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DefaultPropertyDesc");
                OnDefaultPropertyDescChanged();
            }
        }
        private global::System.String _DefaultPropertyDesc;
        partial void OnDefaultPropertyDescChanging(global::System.String value);
        partial void OnDefaultPropertyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefaultPropertyValue
        {
            get
            {
                return _DefaultPropertyValue;
            }
            set
            {
                OnDefaultPropertyValueChanging(value);
                ReportPropertyChanging("DefaultPropertyValue");
                _DefaultPropertyValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultPropertyValue");
                OnDefaultPropertyValueChanged();
            }
        }
        private global::System.Int32 _DefaultPropertyValue;
        partial void OnDefaultPropertyValueChanging(global::System.Int32 value);
        partial void OnDefaultPropertyValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="doctorID">Initial value of the DoctorID property.</param>
        /// <param name="lastname">Initial value of the Lastname property.</param>
        /// <param name="initials">Initial value of the Initials property.</param>
        public static Doctor CreateDoctor(global::System.Int32 doctorID, global::System.String lastname, global::System.String initials)
        {
            Doctor doctor = new Doctor();
            doctor.DoctorID = doctorID;
            doctor.Lastname = lastname;
            doctor.Initials = initials;
            return doctor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorID
        {
            get
            {
                return _DoctorID;
            }
            set
            {
                if (_DoctorID != value)
                {
                    OnDoctorIDChanging(value);
                    ReportPropertyChanging("DoctorID");
                    _DoctorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoctorID");
                    OnDoctorIDChanged();
                }
            }
        }
        private global::System.Int32 _DoctorID;
        partial void OnDoctorIDChanging(global::System.Int32 value);
        partial void OnDoctorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Initials
        {
            get
            {
                return _Initials;
            }
            set
            {
                OnInitialsChanging(value);
                ReportPropertyChanging("Initials");
                _Initials = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Initials");
                OnInitialsChanged();
            }
        }
        private global::System.String _Initials;
        partial void OnInitialsChanging(global::System.String value);
        partial void OnInitialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_DOCTOR", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_DOCTOR", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_DOCTOR", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="dtproperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dtproperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dtproperty object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="property">Initial value of the property property.</param>
        /// <param name="version">Initial value of the version property.</param>
        public static dtproperty Createdtproperty(global::System.Int32 id, global::System.String property, global::System.Int32 version)
        {
            dtproperty dtproperty = new dtproperty();
            dtproperty.id = id;
            dtproperty.property = property;
            dtproperty.version = version;
            return dtproperty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> objectid
        {
            get
            {
                return _objectid;
            }
            set
            {
                OnobjectidChanging(value);
                ReportPropertyChanging("objectid");
                _objectid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("objectid");
                OnobjectidChanged();
            }
        }
        private Nullable<global::System.Int32> _objectid;
        partial void OnobjectidChanging(Nullable<global::System.Int32> value);
        partial void OnobjectidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String property
        {
            get
            {
                return _property;
            }
            set
            {
                if (_property != value)
                {
                    OnpropertyChanging(value);
                    ReportPropertyChanging("property");
                    _property = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("property");
                    OnpropertyChanged();
                }
            }
        }
        private global::System.String _property;
        partial void OnpropertyChanging(global::System.String value);
        partial void OnpropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String uvalue
        {
            get
            {
                return _uvalue;
            }
            set
            {
                OnuvalueChanging(value);
                ReportPropertyChanging("uvalue");
                _uvalue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("uvalue");
                OnuvalueChanged();
            }
        }
        private global::System.String _uvalue;
        partial void OnuvalueChanging(global::System.String value);
        partial void OnuvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] lvalue
        {
            get
            {
                return StructuralObject.GetValidValue(_lvalue);
            }
            set
            {
                OnlvalueChanging(value);
                ReportPropertyChanging("lvalue");
                _lvalue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lvalue");
                OnlvalueChanged();
            }
        }
        private global::System.Byte[] _lvalue;
        partial void OnlvalueChanging(global::System.Byte[] value);
        partial void OnlvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private global::System.Int32 _version;
        partial void OnversionChanging(global::System.Int32 value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Fenotype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fenotype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fenotype object.
        /// </summary>
        /// <param name="fenotypeID">Initial value of the FenotypeID property.</param>
        /// <param name="descriptionEng">Initial value of the DescriptionEng property.</param>
        public static Fenotype CreateFenotype(global::System.Int32 fenotypeID, global::System.String descriptionEng)
        {
            Fenotype fenotype = new Fenotype();
            fenotype.FenotypeID = fenotypeID;
            fenotype.DescriptionEng = descriptionEng;
            return fenotype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FenotypeID
        {
            get
            {
                return _FenotypeID;
            }
            set
            {
                if (_FenotypeID != value)
                {
                    OnFenotypeIDChanging(value);
                    ReportPropertyChanging("FenotypeID");
                    _FenotypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FenotypeID");
                    OnFenotypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FenotypeID;
        partial void OnFenotypeIDChanging(global::System.Int32 value);
        partial void OnFenotypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_FENOTYPE_FENOTYPE", "ROandFenotype")]
        public EntityCollection<ROandFenotype> ROandFenotypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandFenotype>("mlabModel.FK_RO_FENOTYPE_FENOTYPE", "ROandFenotype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandFenotype>("mlabModel.FK_RO_FENOTYPE_FENOTYPE", "ROandFenotype", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Logic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Logic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Logic object.
        /// </summary>
        /// <param name="logicID">Initial value of the LogicID property.</param>
        /// <param name="descriptionEng">Initial value of the DescriptionEng property.</param>
        /// <param name="descriptionRus">Initial value of the DescriptionRus property.</param>
        public static Logic CreateLogic(global::System.Int32 logicID, global::System.String descriptionEng, global::System.String descriptionRus)
        {
            Logic logic = new Logic();
            logic.LogicID = logicID;
            logic.DescriptionEng = descriptionEng;
            logic.DescriptionRus = descriptionRus;
            return logic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogicID
        {
            get
            {
                return _LogicID;
            }
            set
            {
                if (_LogicID != value)
                {
                    OnLogicIDChanging(value);
                    ReportPropertyChanging("LogicID");
                    _LogicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogicID");
                    OnLogicIDChanged();
                }
            }
        }
        private global::System.Int32 _LogicID;
        partial void OnLogicIDChanging(global::System.Int32 value);
        partial void OnLogicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="MBAnalysi")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MBAnalysi : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MBAnalysi object.
        /// </summary>
        /// <param name="mBAnalysisID">Initial value of the MBAnalysisID property.</param>
        /// <param name="sampleID">Initial value of the SampleID property.</param>
        /// <param name="mBAnalysisTypeID">Initial value of the MBAnalysisTypeID property.</param>
        public static MBAnalysi CreateMBAnalysi(global::System.Int32 mBAnalysisID, global::System.Int32 sampleID, global::System.Int32 mBAnalysisTypeID)
        {
            MBAnalysi mBAnalysi = new MBAnalysi();
            mBAnalysi.MBAnalysisID = mBAnalysisID;
            mBAnalysi.SampleID = sampleID;
            mBAnalysi.MBAnalysisTypeID = mBAnalysisTypeID;
            return mBAnalysi;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisID
        {
            get
            {
                return _MBAnalysisID;
            }
            set
            {
                if (_MBAnalysisID != value)
                {
                    OnMBAnalysisIDChanging(value);
                    ReportPropertyChanging("MBAnalysisID");
                    _MBAnalysisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisID");
                    OnMBAnalysisIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisID;
        partial void OnMBAnalysisIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                OnSampleIDChanging(value);
                ReportPropertyChanging("SampleID");
                _SampleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleID");
                OnSampleIDChanged();
            }
        }
        private global::System.Int32 _SampleID;
        partial void OnSampleIDChanging(global::System.Int32 value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                OnMBAnalysisTypeIDChanging(value);
                ReportPropertyChanging("MBAnalysisTypeID");
                _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisTypeID");
                OnMBAnalysisTypeIDChanged();
            }
        }
        private global::System.Int32 _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBAnalysisResultID
        {
            get
            {
                return _MBAnalysisResultID;
            }
            set
            {
                OnMBAnalysisResultIDChanging(value);
                ReportPropertyChanging("MBAnalysisResultID");
                _MBAnalysisResultID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisResultID");
                OnMBAnalysisResultIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBAnalysisResultID;
        partial void OnMBAnalysisResultIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBAnalysisResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBStatusID
        {
            get
            {
                return _MBStatusID;
            }
            set
            {
                OnMBStatusIDChanging(value);
                ReportPropertyChanging("MBStatusID");
                _MBStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBStatusID");
                OnMBStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBStatusID;
        partial void OnMBStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysisBacterioscopy")]
        public EntityCollection<MBAnalysisBacterioscopy> MBAnalysisBacterioscopies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MBAnalysisBacterioscopy>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysisBacterioscopy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MBAnalysisBacterioscopy>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysisBacterioscopy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysisResult")]
        public MBAnalysisResult MBAnalysisResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisResult>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysisResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisResult>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysisResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBAnalysisResult> MBAnalysisResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisResult>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysisResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBAnalysisResult>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysisResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysisType")]
        public MBAnalysisType MBAnalysisType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisType>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysisType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisType>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysisType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBAnalysisType> MBAnalysisTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysisType>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysisType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBAnalysisType>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysisType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_MB_STATUS", "MBStatus")]
        public MBStatus MBStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_MB_STATUS", "MBStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_MB_STATUS", "MBStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBStatus> MBStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_MB_STATUS", "MBStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_MB_STATUS", "MBStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_SAMPLE", "Sample")]
        public Sample Sample
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_MB_ANALYSIS_SAMPLE", "Sample").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_MB_ANALYSIS_SAMPLE", "Sample").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sample> SampleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_MB_ANALYSIS_SAMPLE", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sample>("mlabModel.FK_MB_ANALYSIS_SAMPLE", "Sample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "RO")]
        public EntityCollection<RO> ROes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RO>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RO>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "RO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="MBAnalysisBacterioscopy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MBAnalysisBacterioscopy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MBAnalysisBacterioscopy object.
        /// </summary>
        /// <param name="mBAnalysisBacterioscopyID">Initial value of the MBAnalysisBacterioscopyID property.</param>
        public static MBAnalysisBacterioscopy CreateMBAnalysisBacterioscopy(global::System.Int32 mBAnalysisBacterioscopyID)
        {
            MBAnalysisBacterioscopy mBAnalysisBacterioscopy = new MBAnalysisBacterioscopy();
            mBAnalysisBacterioscopy.MBAnalysisBacterioscopyID = mBAnalysisBacterioscopyID;
            return mBAnalysisBacterioscopy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisBacterioscopyID
        {
            get
            {
                return _MBAnalysisBacterioscopyID;
            }
            set
            {
                if (_MBAnalysisBacterioscopyID != value)
                {
                    OnMBAnalysisBacterioscopyIDChanging(value);
                    ReportPropertyChanging("MBAnalysisBacterioscopyID");
                    _MBAnalysisBacterioscopyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisBacterioscopyID");
                    OnMBAnalysisBacterioscopyIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisBacterioscopyID;
        partial void OnMBAnalysisBacterioscopyIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisBacterioscopyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBAnalysisID
        {
            get
            {
                return _MBAnalysisID;
            }
            set
            {
                OnMBAnalysisIDChanging(value);
                ReportPropertyChanging("MBAnalysisID");
                _MBAnalysisID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisID");
                OnMBAnalysisIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBAnalysisID;
        partial void OnMBAnalysisIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBAnalysisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBBacterioscopyOrganismID
        {
            get
            {
                return _MBBacterioscopyOrganismID;
            }
            set
            {
                OnMBBacterioscopyOrganismIDChanging(value);
                ReportPropertyChanging("MBBacterioscopyOrganismID");
                _MBBacterioscopyOrganismID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBBacterioscopyOrganismID");
                OnMBBacterioscopyOrganismIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBBacterioscopyOrganismID;
        partial void OnMBBacterioscopyOrganismIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBBacterioscopyOrganismIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ViewField
        {
            get
            {
                return _ViewField;
            }
            set
            {
                OnViewFieldChanging(value);
                ReportPropertyChanging("ViewField");
                _ViewField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ViewField");
                OnViewFieldChanged();
            }
        }
        private global::System.String _ViewField;
        partial void OnViewFieldChanging(global::System.String value);
        partial void OnViewFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysi")]
        public MBAnalysi MBAnalysi
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysi").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBAnalysi> MBAnalysiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_ANALYSIS", "MBAnalysi", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBBacterioscopyOrganismType")]
        public MBBacterioscopyOrganismType MBBacterioscopyOrganismType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBBacterioscopyOrganismType>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBBacterioscopyOrganismType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBBacterioscopyOrganismType>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBBacterioscopyOrganismType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBBacterioscopyOrganismType> MBBacterioscopyOrganismTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBBacterioscopyOrganismType>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBBacterioscopyOrganismType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBBacterioscopyOrganismType>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBBacterioscopyOrganismType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="MBAnalysisResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MBAnalysisResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MBAnalysisResult object.
        /// </summary>
        /// <param name="mBAnalysisResultID">Initial value of the MBAnalysisResultID property.</param>
        public static MBAnalysisResult CreateMBAnalysisResult(global::System.Int32 mBAnalysisResultID)
        {
            MBAnalysisResult mBAnalysisResult = new MBAnalysisResult();
            mBAnalysisResult.MBAnalysisResultID = mBAnalysisResultID;
            return mBAnalysisResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisResultID
        {
            get
            {
                return _MBAnalysisResultID;
            }
            set
            {
                if (_MBAnalysisResultID != value)
                {
                    OnMBAnalysisResultIDChanging(value);
                    ReportPropertyChanging("MBAnalysisResultID");
                    _MBAnalysisResultID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisResultID");
                    OnMBAnalysisResultIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisResultID;
        partial void OnMBAnalysisResultIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysi")]
        public EntityCollection<MBAnalysi> MBAnalysis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_RESULT", "MBAnalysi", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="MBAnalysisType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MBAnalysisType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MBAnalysisType object.
        /// </summary>
        /// <param name="mBAnalysisTypeID">Initial value of the MBAnalysisTypeID property.</param>
        /// <param name="isInUse">Initial value of the IsInUse property.</param>
        public static MBAnalysisType CreateMBAnalysisType(global::System.Int32 mBAnalysisTypeID, global::System.Byte isInUse)
        {
            MBAnalysisType mBAnalysisType = new MBAnalysisType();
            mBAnalysisType.MBAnalysisTypeID = mBAnalysisTypeID;
            mBAnalysisType.IsInUse = isInUse;
            return mBAnalysisType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                if (_MBAnalysisTypeID != value)
                {
                    OnMBAnalysisTypeIDChanging(value);
                    ReportPropertyChanging("MBAnalysisTypeID");
                    _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisTypeID");
                    OnMBAnalysisTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsInUse
        {
            get
            {
                return _IsInUse;
            }
            set
            {
                OnIsInUseChanging(value);
                ReportPropertyChanging("IsInUse");
                _IsInUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInUse");
                OnIsInUseChanged();
            }
        }
        private global::System.Byte _IsInUse;
        partial void OnIsInUseChanging(global::System.Byte value);
        partial void OnIsInUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "ContractsAndMBAnalysisType")]
        public EntityCollection<ContractsAndMBAnalysisType> ContractsAndMBAnalysisTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractsAndMBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "ContractsAndMBAnalysisType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractsAndMBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_MB_ANALYSIS_TYPE", "ContractsAndMBAnalysisType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysi")]
        public EntityCollection<MBAnalysi> MBAnalysis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_MB_ANALYSIS_TYPE", "MBAnalysi", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="MBBacterioscopyOrganismType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MBBacterioscopyOrganismType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MBBacterioscopyOrganismType object.
        /// </summary>
        /// <param name="mBBacterioscopyOrganismTypeID">Initial value of the MBBacterioscopyOrganismTypeID property.</param>
        public static MBBacterioscopyOrganismType CreateMBBacterioscopyOrganismType(global::System.Int32 mBBacterioscopyOrganismTypeID)
        {
            MBBacterioscopyOrganismType mBBacterioscopyOrganismType = new MBBacterioscopyOrganismType();
            mBBacterioscopyOrganismType.MBBacterioscopyOrganismTypeID = mBBacterioscopyOrganismTypeID;
            return mBBacterioscopyOrganismType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBBacterioscopyOrganismTypeID
        {
            get
            {
                return _MBBacterioscopyOrganismTypeID;
            }
            set
            {
                if (_MBBacterioscopyOrganismTypeID != value)
                {
                    OnMBBacterioscopyOrganismTypeIDChanging(value);
                    ReportPropertyChanging("MBBacterioscopyOrganismTypeID");
                    _MBBacterioscopyOrganismTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBBacterioscopyOrganismTypeID");
                    OnMBBacterioscopyOrganismTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MBBacterioscopyOrganismTypeID;
        partial void OnMBBacterioscopyOrganismTypeIDChanging(global::System.Int32 value);
        partial void OnMBBacterioscopyOrganismTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBAnalysisBacterioscopy")]
        public EntityCollection<MBAnalysisBacterioscopy> MBAnalysisBacterioscopies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MBAnalysisBacterioscopy>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBAnalysisBacterioscopy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MBAnalysisBacterioscopy>("mlabModel.FK_MB_ANALYSIS_BACTERIOSCOPY_MB_BACTERIOSCOPY_ORGANISM", "MBAnalysisBacterioscopy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="MBStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MBStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MBStatus object.
        /// </summary>
        /// <param name="mBStatusID">Initial value of the MBStatusID property.</param>
        public static MBStatus CreateMBStatus(global::System.Int32 mBStatusID)
        {
            MBStatus mBStatus = new MBStatus();
            mBStatus.MBStatusID = mBStatusID;
            return mBStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBStatusID
        {
            get
            {
                return _MBStatusID;
            }
            set
            {
                if (_MBStatusID != value)
                {
                    OnMBStatusIDChanging(value);
                    ReportPropertyChanging("MBStatusID");
                    _MBStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBStatusID");
                    OnMBStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _MBStatusID;
        partial void OnMBStatusIDChanging(global::System.Int32 value);
        partial void OnMBStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_MB_STATUS", "MBAnalysi")]
        public EntityCollection<MBAnalysi> MBAnalysis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_MB_STATUS", "MBAnalysi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_MB_STATUS", "MBAnalysi", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_STATUS", "RO")]
        public EntityCollection<RO> ROes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RO>("mlabModel.FK_MB_ANALYSIS_TEST_MB_STATUS", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RO>("mlabModel.FK_MB_ANALYSIS_TEST_MB_STATUS", "RO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Method")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Method : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Method object.
        /// </summary>
        /// <param name="methodID">Initial value of the MethodID property.</param>
        /// <param name="descriptionRus">Initial value of the DescriptionRus property.</param>
        public static Method CreateMethod(global::System.Int32 methodID, global::System.String descriptionRus)
        {
            Method method = new Method();
            method.MethodID = methodID;
            method.DescriptionRus = descriptionRus;
            return method;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MethodID
        {
            get
            {
                return _MethodID;
            }
            set
            {
                if (_MethodID != value)
                {
                    OnMethodIDChanging(value);
                    ReportPropertyChanging("MethodID");
                    _MethodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MethodID");
                    OnMethodIDChanged();
                }
            }
        }
        private global::System.Int32 _MethodID;
        partial void OnMethodIDChanging(global::System.Int32 value);
        partial void OnMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CLINICAL_TEST_METHOD", "ROandClinicalTest")]
        public EntityCollection<ROandClinicalTest> ROandClinicalTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandClinicalTest>("mlabModel.FK_RO_CLINICAL_TEST_METHOD", "ROandClinicalTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandClinicalTest>("mlabModel.FK_RO_CLINICAL_TEST_METHOD", "ROandClinicalTest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="OrganismType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganismType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganismType object.
        /// </summary>
        /// <param name="organismTypeID">Initial value of the OrganismTypeID property.</param>
        public static OrganismType CreateOrganismType(global::System.Int32 organismTypeID)
        {
            OrganismType organismType = new OrganismType();
            organismType.OrganismTypeID = organismTypeID;
            return organismType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganismTypeID
        {
            get
            {
                return _OrganismTypeID;
            }
            set
            {
                if (_OrganismTypeID != value)
                {
                    OnOrganismTypeIDChanging(value);
                    ReportPropertyChanging("OrganismTypeID");
                    _OrganismTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganismTypeID");
                    OnOrganismTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _OrganismTypeID;
        partial void OnOrganismTypeIDChanging(global::System.Int32 value);
        partial void OnOrganismTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_ORGANISM", "RO")]
        public EntityCollection<RO> ROes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RO>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ORGANISM", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RO>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ORGANISM", "RO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_ORGANISM_TYPE", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_ORGANISM_TYPE", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_ORGANISM_TYPE", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientID">Initial value of the PatientID property.</param>
        public static Patient CreatePatient(global::System.Int32 patientID)
        {
            Patient patient = new Patient();
            patient.PatientID = patientID;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientID
        {
            get
            {
                return _PatientID;
            }
            set
            {
                if (_PatientID != value)
                {
                    OnPatientIDChanging(value);
                    ReportPropertyChanging("PatientID");
                    _PatientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientID");
                    OnPatientIDChanged();
                }
            }
        }
        private global::System.Int32 _PatientID;
        partial void OnPatientIDChanging(global::System.Int32 value);
        partial void OnPatientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PatientStatusTypeID
        {
            get
            {
                return _PatientStatusTypeID;
            }
            set
            {
                OnPatientStatusTypeIDChanging(value);
                ReportPropertyChanging("PatientStatusTypeID");
                _PatientStatusTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientStatusTypeID");
                OnPatientStatusTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PatientStatusTypeID;
        partial void OnPatientStatusTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPatientStatusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Initials
        {
            get
            {
                return _Initials;
            }
            set
            {
                OnInitialsChanging(value);
                ReportPropertyChanging("Initials");
                _Initials = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Initials");
                OnInitialsChanged();
            }
        }
        private global::System.String _Initials;
        partial void OnInitialsChanging(global::System.String value);
        partial void OnInitialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthdate;
        partial void OnBirthdateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CrfNumber
        {
            get
            {
                return _CrfNumber;
            }
            set
            {
                OnCrfNumberChanging(value);
                ReportPropertyChanging("CrfNumber");
                _CrfNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CrfNumber");
                OnCrfNumberChanged();
            }
        }
        private global::System.String _CrfNumber;
        partial void OnCrfNumberChanging(global::System.String value);
        partial void OnCrfNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CaseHistory
        {
            get
            {
                return _CaseHistory;
            }
            set
            {
                OnCaseHistoryChanging(value);
                ReportPropertyChanging("CaseHistory");
                _CaseHistory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CaseHistory");
                OnCaseHistoryChanged();
            }
        }
        private global::System.String _CaseHistory;
        partial void OnCaseHistoryChanging(global::System.String value);
        partial void OnCaseHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InfectionDate
        {
            get
            {
                return _InfectionDate;
            }
            set
            {
                OnInfectionDateChanging(value);
                ReportPropertyChanging("InfectionDate");
                _InfectionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfectionDate");
                OnInfectionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InfectionDate;
        partial void OnInfectionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInfectionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HospitalisationDate
        {
            get
            {
                return _HospitalisationDate;
            }
            set
            {
                OnHospitalisationDateChanging(value);
                ReportPropertyChanging("HospitalisationDate");
                _HospitalisationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HospitalisationDate");
                OnHospitalisationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HospitalisationDate;
        partial void OnHospitalisationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHospitalisationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DischargeDate
        {
            get
            {
                return _DischargeDate;
            }
            set
            {
                OnDischargeDateChanging(value);
                ReportPropertyChanging("DischargeDate");
                _DischargeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DischargeDate");
                OnDischargeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DischargeDate;
        partial void OnDischargeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDischargeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CardReadyDate
        {
            get
            {
                return _CardReadyDate;
            }
            set
            {
                OnCardReadyDateChanging(value);
                ReportPropertyChanging("CardReadyDate");
                _CardReadyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardReadyDate");
                OnCardReadyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CardReadyDate;
        partial void OnCardReadyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCardReadyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsABTherapy
        {
            get
            {
                return _IsABTherapy;
            }
            set
            {
                OnIsABTherapyChanging(value);
                ReportPropertyChanging("IsABTherapy");
                _IsABTherapy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsABTherapy");
                OnIsABTherapyChanged();
            }
        }
        private Nullable<global::System.Int32> _IsABTherapy;
        partial void OnIsABTherapyChanging(Nullable<global::System.Int32> value);
        partial void OnIsABTherapyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrintedResults
        {
            get
            {
                return _PrintedResults;
            }
            set
            {
                OnPrintedResultsChanging(value);
                ReportPropertyChanging("PrintedResults");
                _PrintedResults = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintedResults");
                OnPrintedResultsChanged();
            }
        }
        private Nullable<global::System.Int32> _PrintedResults;
        partial void OnPrintedResultsChanging(Nullable<global::System.Int32> value);
        partial void OnPrintedResultsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_PATIENT_PATIENT_STATUS", "PatientStatusType")]
        public PatientStatusType PatientStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientStatusType>("mlabModel.FK_PATIENT_PATIENT_STATUS", "PatientStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientStatusType>("mlabModel.FK_PATIENT_PATIENT_STATUS", "PatientStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientStatusType> PatientStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientStatusType>("mlabModel.FK_PATIENT_PATIENT_STATUS", "PatientStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientStatusType>("mlabModel.FK_PATIENT_PATIENT_STATUS", "PatientStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_PATIENT", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_PATIENT", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_PATIENT", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="PatientStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientStatusType object.
        /// </summary>
        /// <param name="patientStatusTypeID">Initial value of the PatientStatusTypeID property.</param>
        public static PatientStatusType CreatePatientStatusType(global::System.Int32 patientStatusTypeID)
        {
            PatientStatusType patientStatusType = new PatientStatusType();
            patientStatusType.PatientStatusTypeID = patientStatusTypeID;
            return patientStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientStatusTypeID
        {
            get
            {
                return _PatientStatusTypeID;
            }
            set
            {
                if (_PatientStatusTypeID != value)
                {
                    OnPatientStatusTypeIDChanging(value);
                    ReportPropertyChanging("PatientStatusTypeID");
                    _PatientStatusTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientStatusTypeID");
                    OnPatientStatusTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PatientStatusTypeID;
        partial void OnPatientStatusTypeIDChanging(global::System.Int32 value);
        partial void OnPatientStatusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_PATIENT_PATIENT_STATUS", "Patient")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("mlabModel.FK_PATIENT_PATIENT_STATUS", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("mlabModel.FK_PATIENT_PATIENT_STATUS", "Patient", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="PaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentType object.
        /// </summary>
        /// <param name="paymentTypeID">Initial value of the PaymentTypeID property.</param>
        public static PaymentType CreatePaymentType(global::System.Int32 paymentTypeID)
        {
            PaymentType paymentType = new PaymentType();
            paymentType.PaymentTypeID = paymentTypeID;
            return paymentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentTypeID
        {
            get
            {
                return _PaymentTypeID;
            }
            set
            {
                if (_PaymentTypeID != value)
                {
                    OnPaymentTypeIDChanging(value);
                    ReportPropertyChanging("PaymentTypeID");
                    _PaymentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentTypeID");
                    OnPaymentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PaymentTypeID;
        partial void OnPaymentTypeIDChanging(global::System.Int32 value);
        partial void OnPaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "ContractsAndMBAnalysisType")]
        public EntityCollection<ContractsAndMBAnalysisType> ContractsAndMBAnalysisTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractsAndMBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "ContractsAndMBAnalysisType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractsAndMBAnalysisType>("mlabModel.FK_CONTRACT_MB_ANALYSIS_TYPE_PAYMENT_TYPE", "ContractsAndMBAnalysisType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="descriptionEng">Initial value of the DescriptionEng property.</param>
        /// <param name="descriptionRus">Initial value of the DescriptionRus property.</param>
        public static Project CreateProject(global::System.Int32 projectID, global::System.String descriptionEng, global::System.String descriptionRus)
        {
            Project project = new Project();
            project.ProjectID = projectID;
            project.DescriptionEng = descriptionEng;
            project.DescriptionRus = descriptionRus;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_CENTER_PROJECT_PROJECT", "CentersAndProject")]
        public EntityCollection<CentersAndProject> CentersAndProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CentersAndProject>("mlabModel.FK_CENTER_PROJECT_PROJECT", "CentersAndProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CentersAndProject>("mlabModel.FK_CENTER_PROJECT_PROJECT", "CentersAndProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_PROJECT_RO_PROJECT", "ROandProject")]
        public EntityCollection<ROandProject> ROandProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandProject>("mlabModel.FK_PROJECT_RO_PROJECT", "ROandProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandProject>("mlabModel.FK_PROJECT_RO_PROJECT", "ROandProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_REIDENTIFY_ORGANISM_PROJECT", "RO")]
        public EntityCollection<RO> ROes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RO>("mlabModel.FK_REIDENTIFY_ORGANISM_PROJECT", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RO>("mlabModel.FK_REIDENTIFY_ORGANISM_PROJECT", "RO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="RemoveReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RemoveReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RemoveReason object.
        /// </summary>
        /// <param name="removeReasonID">Initial value of the RemoveReasonID property.</param>
        /// <param name="descriptionRus">Initial value of the DescriptionRus property.</param>
        public static RemoveReason CreateRemoveReason(global::System.Int32 removeReasonID, global::System.String descriptionRus)
        {
            RemoveReason removeReason = new RemoveReason();
            removeReason.RemoveReasonID = removeReasonID;
            removeReason.DescriptionRus = descriptionRus;
            return removeReason;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RemoveReasonID
        {
            get
            {
                return _RemoveReasonID;
            }
            set
            {
                if (_RemoveReasonID != value)
                {
                    OnRemoveReasonIDChanging(value);
                    ReportPropertyChanging("RemoveReasonID");
                    _RemoveReasonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RemoveReasonID");
                    OnRemoveReasonIDChanged();
                }
            }
        }
        private global::System.Int32 _RemoveReasonID;
        partial void OnRemoveReasonIDChanging(global::System.Int32 value);
        partial void OnRemoveReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RO")]
        public EntityCollection<RO> ROes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RO>("mlabModel.FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RO>("mlabModel.FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_REMOVE_REASON", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_REMOVE_REASON", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_REMOVE_REASON", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="RO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RO object.
        /// </summary>
        /// <param name="rOID">Initial value of the ROID property.</param>
        /// <param name="mBAnalysisID">Initial value of the MBAnalysisID property.</param>
        public static RO CreateRO(global::System.Int32 rOID, global::System.Int32 mBAnalysisID)
        {
            RO rO = new RO();
            rO.ROID = rOID;
            rO.MBAnalysisID = mBAnalysisID;
            return rO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROID
        {
            get
            {
                return _ROID;
            }
            set
            {
                if (_ROID != value)
                {
                    OnROIDChanging(value);
                    ReportPropertyChanging("ROID");
                    _ROID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROID");
                    OnROIDChanged();
                }
            }
        }
        private global::System.Int32 _ROID;
        partial void OnROIDChanging(global::System.Int32 value);
        partial void OnROIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                OnSampleIDChanging(value);
                ReportPropertyChanging("SampleID");
                _SampleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleID");
                OnSampleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SampleID;
        partial void OnSampleIDChanging(Nullable<global::System.Int32> value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisID
        {
            get
            {
                return _MBAnalysisID;
            }
            set
            {
                OnMBAnalysisIDChanging(value);
                ReportPropertyChanging("MBAnalysisID");
                _MBAnalysisID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisID");
                OnMBAnalysisIDChanged();
            }
        }
        private global::System.Int32 _MBAnalysisID;
        partial void OnMBAnalysisIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrganismTypeID
        {
            get
            {
                return _OrganismTypeID;
            }
            set
            {
                OnOrganismTypeIDChanging(value);
                ReportPropertyChanging("OrganismTypeID");
                _OrganismTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganismTypeID");
                OnOrganismTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrganismTypeID;
        partial void OnOrganismTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrganismTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBStatusID
        {
            get
            {
                return _MBStatusID;
            }
            set
            {
                OnMBStatusIDChanging(value);
                ReportPropertyChanging("MBStatusID");
                _MBStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBStatusID");
                OnMBStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBStatusID;
        partial void OnMBStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryProjectID
        {
            get
            {
                return _PrimaryProjectID;
            }
            set
            {
                OnPrimaryProjectIDChanging(value);
                ReportPropertyChanging("PrimaryProjectID");
                _PrimaryProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryProjectID");
                OnPrimaryProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryProjectID;
        partial void OnPrimaryProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RemoveReasonID
        {
            get
            {
                return _RemoveReasonID;
            }
            set
            {
                OnRemoveReasonIDChanging(value);
                ReportPropertyChanging("RemoveReasonID");
                _RemoveReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemoveReasonID");
                OnRemoveReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RemoveReasonID;
        partial void OnRemoveReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnRemoveReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumberOfReidentify
        {
            get
            {
                return _NumberOfReidentify;
            }
            set
            {
                OnNumberOfReidentifyChanging(value);
                ReportPropertyChanging("NumberOfReidentify");
                _NumberOfReidentify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NumberOfReidentify");
                OnNumberOfReidentifyChanged();
            }
        }
        private global::System.String _NumberOfReidentify;
        partial void OnNumberOfReidentifyChanging(global::System.String value);
        partial void OnNumberOfReidentifyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DateOfReidentify
        {
            get
            {
                return _DateOfReidentify;
            }
            set
            {
                OnDateOfReidentifyChanging(value);
                ReportPropertyChanging("DateOfReidentify");
                _DateOfReidentify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DateOfReidentify");
                OnDateOfReidentifyChanged();
            }
        }
        private global::System.String _DateOfReidentify;
        partial void OnDateOfReidentifyChanging(global::System.String value);
        partial void OnDateOfReidentifyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfMuseum
        {
            get
            {
                return _NumberOfMuseum;
            }
            set
            {
                OnNumberOfMuseumChanging(value);
                ReportPropertyChanging("NumberOfMuseum");
                _NumberOfMuseum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfMuseum");
                OnNumberOfMuseumChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfMuseum;
        partial void OnNumberOfMuseumChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfMuseumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DateOfMuseum
        {
            get
            {
                return _DateOfMuseum;
            }
            set
            {
                OnDateOfMuseumChanging(value);
                ReportPropertyChanging("DateOfMuseum");
                _DateOfMuseum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfMuseum");
                OnDateOfMuseumChanged();
            }
        }
        private Nullable<global::System.Int32> _DateOfMuseum;
        partial void OnDateOfMuseumChanging(Nullable<global::System.Int32> value);
        partial void OnDateOfMuseumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsInSifter
        {
            get
            {
                return _IsInSifter;
            }
            set
            {
                OnIsInSifterChanging(value);
                ReportPropertyChanging("IsInSifter");
                _IsInSifter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInSifter");
                OnIsInSifterChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsInSifter;
        partial void OnIsInSifterChanging(Nullable<global::System.Boolean> value);
        partial void OnIsInSifterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BacterialLoadValue
        {
            get
            {
                return _BacterialLoadValue;
            }
            set
            {
                OnBacterialLoadValueChanging(value);
                ReportPropertyChanging("BacterialLoadValue");
                _BacterialLoadValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BacterialLoadValue");
                OnBacterialLoadValueChanged();
            }
        }
        private global::System.String _BacterialLoadValue;
        partial void OnBacterialLoadValueChanging(global::System.String value);
        partial void OnBacterialLoadValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BacterialLoadUnit
        {
            get
            {
                return _BacterialLoadUnit;
            }
            set
            {
                OnBacterialLoadUnitChanging(value);
                ReportPropertyChanging("BacterialLoadUnit");
                _BacterialLoadUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BacterialLoadUnit");
                OnBacterialLoadUnitChanged();
            }
        }
        private global::System.String _BacterialLoadUnit;
        partial void OnBacterialLoadUnitChanging(global::System.String value);
        partial void OnBacterialLoadUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "MBAnalysi")]
        public MBAnalysi MBAnalysi
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "MBAnalysi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "MBAnalysi").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBAnalysi> MBAnalysiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "MBAnalysi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ANALYSIS", "MBAnalysi", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_STATUS", "MBStatus")]
        public MBStatus MBStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_TEST_MB_STATUS", "MBStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_TEST_MB_STATUS", "MBStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MBStatus> MBStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_TEST_MB_STATUS", "MBStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MBStatus>("mlabModel.FK_MB_ANALYSIS_TEST_MB_STATUS", "MBStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_TEST_MB_ORGANISM", "OrganismType")]
        public OrganismType OrganismType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ORGANISM", "OrganismType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ORGANISM", "OrganismType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganismType> OrganismTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ORGANISM", "OrganismType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganismType>("mlabModel.FK_MB_ANALYSIS_TEST_MB_ORGANISM", "OrganismType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_REIDENTIFY_ORGANISM_PROJECT", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_REIDENTIFY_ORGANISM_PROJECT", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_REIDENTIFY_ORGANISM_PROJECT", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_REIDENTIFY_ORGANISM_PROJECT", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("mlabModel.FK_REIDENTIFY_ORGANISM_PROJECT", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RemoveReason")]
        public RemoveReason RemoveReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemoveReason>("mlabModel.FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RemoveReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemoveReason>("mlabModel.FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RemoveReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RemoveReason> RemoveReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemoveReason>("mlabModel.FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RemoveReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RemoveReason>("mlabModel.FK_REIDENTIFY_ORGANISM_REMOVE_REASON", "RemoveReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CHAR_REIDENTIFY_ORGANISM", "ROChar")]
        public EntityCollection<ROChar> ROChars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROChar>("mlabModel.FK_RO_CHAR_REIDENTIFY_ORGANISM", "ROChar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROChar>("mlabModel.FK_RO_CHAR_REIDENTIFY_ORGANISM", "ROChar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "ROandClinicalTest")]
        public EntityCollection<ROandClinicalTest> ROandClinicalTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandClinicalTest>("mlabModel.FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "ROandClinicalTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandClinicalTest>("mlabModel.FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "ROandClinicalTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_COMMENT_REIDENTIFY_ORGANISM", "ROandComment")]
        public EntityCollection<ROandComment> ROandComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandComment>("mlabModel.FK_RO_COMMENT_REIDENTIFY_ORGANISM", "ROandComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandComment>("mlabModel.FK_RO_COMMENT_REIDENTIFY_ORGANISM", "ROandComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "ROandFenotype")]
        public EntityCollection<ROandFenotype> ROandFenotypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandFenotype>("mlabModel.FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "ROandFenotype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandFenotype>("mlabModel.FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "ROandFenotype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_Samples", "Sample")]
        public Sample Sample
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_RO_Samples", "Sample").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_RO_Samples", "Sample").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sample> SampleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_RO_Samples", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sample>("mlabModel.FK_RO_Samples", "Sample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_ROandProjects_RO", "ROandProject")]
        public EntityCollection<ROandProject> ROandProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROandProject>("mlabModel.FK_ROandProjects_RO", "ROandProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROandProject>("mlabModel.FK_ROandProjects_RO", "ROandProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ROandClinicalTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROandClinicalTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROandClinicalTest object.
        /// </summary>
        /// <param name="rOClinicalTestID">Initial value of the ROClinicalTestID property.</param>
        public static ROandClinicalTest CreateROandClinicalTest(global::System.Int32 rOClinicalTestID)
        {
            ROandClinicalTest rOandClinicalTest = new ROandClinicalTest();
            rOandClinicalTest.ROClinicalTestID = rOClinicalTestID;
            return rOandClinicalTest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROClinicalTestID
        {
            get
            {
                return _ROClinicalTestID;
            }
            set
            {
                if (_ROClinicalTestID != value)
                {
                    OnROClinicalTestIDChanging(value);
                    ReportPropertyChanging("ROClinicalTestID");
                    _ROClinicalTestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROClinicalTestID");
                    OnROClinicalTestIDChanged();
                }
            }
        }
        private global::System.Int32 _ROClinicalTestID;
        partial void OnROClinicalTestIDChanging(global::System.Int32 value);
        partial void OnROClinicalTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ROID
        {
            get
            {
                return _ROID;
            }
            set
            {
                OnROIDChanging(value);
                ReportPropertyChanging("ROID");
                _ROID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROID");
                OnROIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ROID;
        partial void OnROIDChanging(Nullable<global::System.Int32> value);
        partial void OnROIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AntibioticTypeID
        {
            get
            {
                return _AntibioticTypeID;
            }
            set
            {
                OnAntibioticTypeIDChanging(value);
                ReportPropertyChanging("AntibioticTypeID");
                _AntibioticTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AntibioticTypeID");
                OnAntibioticTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AntibioticTypeID;
        partial void OnAntibioticTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAntibioticTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MethodID
        {
            get
            {
                return _MethodID;
            }
            set
            {
                OnMethodIDChanging(value);
                ReportPropertyChanging("MethodID");
                _MethodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MethodID");
                OnMethodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MethodID;
        partial void OnMethodIDChanging(Nullable<global::System.Int32> value);
        partial void OnMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ResultValue
        {
            get
            {
                return _ResultValue;
            }
            set
            {
                OnResultValueChanging(value);
                ReportPropertyChanging("ResultValue");
                _ResultValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultValue");
                OnResultValueChanged();
            }
        }
        private Nullable<global::System.Double> _ResultValue;
        partial void OnResultValueChanging(Nullable<global::System.Double> value);
        partial void OnResultValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultSIR
        {
            get
            {
                return _ResultSIR;
            }
            set
            {
                OnResultSIRChanging(value);
                ReportPropertyChanging("ResultSIR");
                _ResultSIR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultSIR");
                OnResultSIRChanged();
            }
        }
        private global::System.String _ResultSIR;
        partial void OnResultSIRChanging(global::System.String value);
        partial void OnResultSIRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "AntibioticType")]
        public AntibioticType AntibioticType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntibioticType>("mlabModel.FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "AntibioticType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntibioticType>("mlabModel.FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "AntibioticType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AntibioticType> AntibioticTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntibioticType>("mlabModel.FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "AntibioticType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AntibioticType>("mlabModel.FK_RO_CLINICAL_TEST_ANTIBIOTIC_TYPE", "AntibioticType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CLINICAL_TEST_METHOD", "Method")]
        public Method Method
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("mlabModel.FK_RO_CLINICAL_TEST_METHOD", "Method").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("mlabModel.FK_RO_CLINICAL_TEST_METHOD", "Method").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Method> MethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("mlabModel.FK_RO_CLINICAL_TEST_METHOD", "Method");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Method>("mlabModel.FK_RO_CLINICAL_TEST_METHOD", "Method", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "RO")]
        public RO RO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "RO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "RO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RO> ROReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RO>("mlabModel.FK_RO_CLINICAL_TEST_REIDENTIFY_ORGANISM", "RO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ROandComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROandComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROandComment object.
        /// </summary>
        /// <param name="rOandCommentID">Initial value of the ROandCommentID property.</param>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        /// <param name="rOID">Initial value of the ROID property.</param>
        public static ROandComment CreateROandComment(global::System.Int32 rOandCommentID, global::System.Int32 commentID, global::System.Int32 rOID)
        {
            ROandComment rOandComment = new ROandComment();
            rOandComment.ROandCommentID = rOandCommentID;
            rOandComment.CommentID = commentID;
            rOandComment.ROID = rOID;
            return rOandComment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROandCommentID
        {
            get
            {
                return _ROandCommentID;
            }
            set
            {
                if (_ROandCommentID != value)
                {
                    OnROandCommentIDChanging(value);
                    ReportPropertyChanging("ROandCommentID");
                    _ROandCommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROandCommentID");
                    OnROandCommentIDChanged();
                }
            }
        }
        private global::System.Int32 _ROandCommentID;
        partial void OnROandCommentIDChanging(global::System.Int32 value);
        partial void OnROandCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                OnCommentIDChanging(value);
                ReportPropertyChanging("CommentID");
                _CommentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentID");
                OnCommentIDChanged();
            }
        }
        private global::System.Int32 _CommentID;
        partial void OnCommentIDChanging(global::System.Int32 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROID
        {
            get
            {
                return _ROID;
            }
            set
            {
                OnROIDChanging(value);
                ReportPropertyChanging("ROID");
                _ROID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROID");
                OnROIDChanged();
            }
        }
        private global::System.Int32 _ROID;
        partial void OnROIDChanging(global::System.Int32 value);
        partial void OnROIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_COMMENT_COMMENT", "Comment")]
        public Comment Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comment>("mlabModel.FK_RO_COMMENT_COMMENT", "Comment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comment>("mlabModel.FK_RO_COMMENT_COMMENT", "Comment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Comment> CommentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comment>("mlabModel.FK_RO_COMMENT_COMMENT", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Comment>("mlabModel.FK_RO_COMMENT_COMMENT", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_COMMENT_REIDENTIFY_ORGANISM", "RO")]
        public RO RO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_COMMENT_REIDENTIFY_ORGANISM", "RO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_COMMENT_REIDENTIFY_ORGANISM", "RO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RO> ROReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_COMMENT_REIDENTIFY_ORGANISM", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RO>("mlabModel.FK_RO_COMMENT_REIDENTIFY_ORGANISM", "RO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ROandFenotype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROandFenotype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROandFenotype object.
        /// </summary>
        /// <param name="fenotypeID">Initial value of the FenotypeID property.</param>
        /// <param name="rOID">Initial value of the ROID property.</param>
        /// <param name="rOandFenotypeID">Initial value of the ROandFenotypeID property.</param>
        public static ROandFenotype CreateROandFenotype(global::System.Int32 fenotypeID, global::System.Int32 rOID, global::System.Int32 rOandFenotypeID)
        {
            ROandFenotype rOandFenotype = new ROandFenotype();
            rOandFenotype.FenotypeID = fenotypeID;
            rOandFenotype.ROID = rOID;
            rOandFenotype.ROandFenotypeID = rOandFenotypeID;
            return rOandFenotype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FenotypeID
        {
            get
            {
                return _FenotypeID;
            }
            set
            {
                OnFenotypeIDChanging(value);
                ReportPropertyChanging("FenotypeID");
                _FenotypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FenotypeID");
                OnFenotypeIDChanged();
            }
        }
        private global::System.Int32 _FenotypeID;
        partial void OnFenotypeIDChanging(global::System.Int32 value);
        partial void OnFenotypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROID
        {
            get
            {
                return _ROID;
            }
            set
            {
                OnROIDChanging(value);
                ReportPropertyChanging("ROID");
                _ROID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROID");
                OnROIDChanged();
            }
        }
        private global::System.Int32 _ROID;
        partial void OnROIDChanging(global::System.Int32 value);
        partial void OnROIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROandFenotypeID
        {
            get
            {
                return _ROandFenotypeID;
            }
            set
            {
                if (_ROandFenotypeID != value)
                {
                    OnROandFenotypeIDChanging(value);
                    ReportPropertyChanging("ROandFenotypeID");
                    _ROandFenotypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROandFenotypeID");
                    OnROandFenotypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ROandFenotypeID;
        partial void OnROandFenotypeIDChanging(global::System.Int32 value);
        partial void OnROandFenotypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_FENOTYPE_FENOTYPE", "Fenotype")]
        public Fenotype Fenotype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fenotype>("mlabModel.FK_RO_FENOTYPE_FENOTYPE", "Fenotype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fenotype>("mlabModel.FK_RO_FENOTYPE_FENOTYPE", "Fenotype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fenotype> FenotypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fenotype>("mlabModel.FK_RO_FENOTYPE_FENOTYPE", "Fenotype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fenotype>("mlabModel.FK_RO_FENOTYPE_FENOTYPE", "Fenotype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "RO")]
        public RO RO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "RO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "RO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RO> ROReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RO>("mlabModel.FK_RO_FENOTYPE_REIDENTIFY_ORGANISM", "RO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ROandProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROandProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROandProject object.
        /// </summary>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="rOID">Initial value of the ROID property.</param>
        /// <param name="rOProjectID">Initial value of the ROProjectID property.</param>
        public static ROandProject CreateROandProject(global::System.Int32 projectID, global::System.Int32 rOID, global::System.Int32 rOProjectID)
        {
            ROandProject rOandProject = new ROandProject();
            rOandProject.ProjectID = projectID;
            rOandProject.ROID = rOID;
            rOandProject.ROProjectID = rOProjectID;
            return rOandProject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROID
        {
            get
            {
                return _ROID;
            }
            set
            {
                OnROIDChanging(value);
                ReportPropertyChanging("ROID");
                _ROID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROID");
                OnROIDChanged();
            }
        }
        private global::System.Int32 _ROID;
        partial void OnROIDChanging(global::System.Int32 value);
        partial void OnROIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROProjectID
        {
            get
            {
                return _ROProjectID;
            }
            set
            {
                if (_ROProjectID != value)
                {
                    OnROProjectIDChanging(value);
                    ReportPropertyChanging("ROProjectID");
                    _ROProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROProjectID");
                    OnROProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ROProjectID;
        partial void OnROProjectIDChanging(global::System.Int32 value);
        partial void OnROProjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_PROJECT_RO_PROJECT", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_PROJECT_RO_PROJECT", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_PROJECT_RO_PROJECT", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("mlabModel.FK_PROJECT_RO_PROJECT", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("mlabModel.FK_PROJECT_RO_PROJECT", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_ROandProjects_RO", "RO")]
        public RO RO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_ROandProjects_RO", "RO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_ROandProjects_RO", "RO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RO> ROReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_ROandProjects_RO", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RO>("mlabModel.FK_ROandProjects_RO", "RO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ROChar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROChar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROChar object.
        /// </summary>
        /// <param name="rOCharID">Initial value of the ROCharID property.</param>
        public static ROChar CreateROChar(global::System.Int32 rOCharID)
        {
            ROChar rOChar = new ROChar();
            rOChar.ROCharID = rOCharID;
            return rOChar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROCharID
        {
            get
            {
                return _ROCharID;
            }
            set
            {
                if (_ROCharID != value)
                {
                    OnROCharIDChanging(value);
                    ReportPropertyChanging("ROCharID");
                    _ROCharID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROCharID");
                    OnROCharIDChanged();
                }
            }
        }
        private global::System.Int32 _ROCharID;
        partial void OnROCharIDChanging(global::System.Int32 value);
        partial void OnROCharIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ROID
        {
            get
            {
                return _ROID;
            }
            set
            {
                OnROIDChanging(value);
                ReportPropertyChanging("ROID");
                _ROID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROID");
                OnROIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ROID;
        partial void OnROIDChanging(Nullable<global::System.Int32> value);
        partial void OnROIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ROCharNameID
        {
            get
            {
                return _ROCharNameID;
            }
            set
            {
                OnROCharNameIDChanging(value);
                ReportPropertyChanging("ROCharNameID");
                _ROCharNameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROCharNameID");
                OnROCharNameIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ROCharNameID;
        partial void OnROCharNameIDChanging(Nullable<global::System.Int32> value);
        partial void OnROCharNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BoolValue
        {
            get
            {
                return _BoolValue;
            }
            set
            {
                OnBoolValueChanging(value);
                ReportPropertyChanging("BoolValue");
                _BoolValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BoolValue");
                OnBoolValueChanged();
            }
        }
        private global::System.String _BoolValue;
        partial void OnBoolValueChanging(global::System.String value);
        partial void OnBoolValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> NumberValue
        {
            get
            {
                return _NumberValue;
            }
            set
            {
                OnNumberValueChanging(value);
                ReportPropertyChanging("NumberValue");
                _NumberValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberValue");
                OnNumberValueChanged();
            }
        }
        private Nullable<global::System.Double> _NumberValue;
        partial void OnNumberValueChanging(Nullable<global::System.Double> value);
        partial void OnNumberValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StrValue
        {
            get
            {
                return _StrValue;
            }
            set
            {
                OnStrValueChanging(value);
                ReportPropertyChanging("StrValue");
                _StrValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StrValue");
                OnStrValueChanged();
            }
        }
        private global::System.String _StrValue;
        partial void OnStrValueChanging(global::System.String value);
        partial void OnStrValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DataValue
        {
            get
            {
                return _DataValue;
            }
            set
            {
                OnDataValueChanging(value);
                ReportPropertyChanging("DataValue");
                _DataValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataValue");
                OnDataValueChanged();
            }
        }
        private Nullable<global::System.DateTime> _DataValue;
        partial void OnDataValueChanging(Nullable<global::System.DateTime> value);
        partial void OnDataValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CHAR_REIDENTIFY_ORGANISM", "RO")]
        public RO RO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_CHAR_REIDENTIFY_ORGANISM", "RO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_CHAR_REIDENTIFY_ORGANISM", "RO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RO> ROReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RO>("mlabModel.FK_RO_CHAR_REIDENTIFY_ORGANISM", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RO>("mlabModel.FK_RO_CHAR_REIDENTIFY_ORGANISM", "RO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CHAR_RO_CHAR_NAME", "ROCharName")]
        public ROCharName ROCharName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROCharName>("mlabModel.FK_RO_CHAR_RO_CHAR_NAME", "ROCharName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROCharName>("mlabModel.FK_RO_CHAR_RO_CHAR_NAME", "ROCharName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ROCharName> ROCharNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROCharName>("mlabModel.FK_RO_CHAR_RO_CHAR_NAME", "ROCharName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ROCharName>("mlabModel.FK_RO_CHAR_RO_CHAR_NAME", "ROCharName", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="ROCharName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROCharName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROCharName object.
        /// </summary>
        /// <param name="rOCharNameID">Initial value of the ROCharNameID property.</param>
        /// <param name="descriptionRus">Initial value of the DescriptionRus property.</param>
        public static ROCharName CreateROCharName(global::System.Int32 rOCharNameID, global::System.String descriptionRus)
        {
            ROCharName rOCharName = new ROCharName();
            rOCharName.ROCharNameID = rOCharNameID;
            rOCharName.DescriptionRus = descriptionRus;
            return rOCharName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROCharNameID
        {
            get
            {
                return _ROCharNameID;
            }
            set
            {
                if (_ROCharNameID != value)
                {
                    OnROCharNameIDChanging(value);
                    ReportPropertyChanging("ROCharNameID");
                    _ROCharNameID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROCharNameID");
                    OnROCharNameIDChanged();
                }
            }
        }
        private global::System.Int32 _ROCharNameID;
        partial void OnROCharNameIDChanging(global::System.Int32 value);
        partial void OnROCharNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_CHAR_RO_CHAR_NAME", "ROChar")]
        public EntityCollection<ROChar> ROChars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ROChar>("mlabModel.FK_RO_CHAR_RO_CHAR_NAME", "ROChar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ROChar>("mlabModel.FK_RO_CHAR_RO_CHAR_NAME", "ROChar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Sample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sample object.
        /// </summary>
        /// <param name="sampleID">Initial value of the SampleID property.</param>
        /// <param name="patientID">Initial value of the PatientID property.</param>
        /// <param name="clinicMaterialID">Initial value of the ClinicMaterialID property.</param>
        /// <param name="doctorID">Initial value of the DoctorID property.</param>
        /// <param name="clinicID">Initial value of the ClinicID property.</param>
        /// <param name="datetimeCapture">Initial value of the DatetimeCapture property.</param>
        /// <param name="datetimeDelivery">Initial value of the DatetimeDelivery property.</param>
        public static Sample CreateSample(global::System.Int32 sampleID, global::System.Int32 patientID, global::System.Int32 clinicMaterialID, global::System.Int32 doctorID, global::System.Int32 clinicID, global::System.DateTime datetimeCapture, global::System.DateTime datetimeDelivery)
        {
            Sample sample = new Sample();
            sample.SampleID = sampleID;
            sample.PatientID = patientID;
            sample.ClinicMaterialID = clinicMaterialID;
            sample.DoctorID = doctorID;
            sample.ClinicID = clinicID;
            sample.DatetimeCapture = datetimeCapture;
            sample.DatetimeDelivery = datetimeDelivery;
            return sample;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                if (_SampleID != value)
                {
                    OnSampleIDChanging(value);
                    ReportPropertyChanging("SampleID");
                    _SampleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SampleID");
                    OnSampleIDChanged();
                }
            }
        }
        private global::System.Int32 _SampleID;
        partial void OnSampleIDChanging(global::System.Int32 value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientID
        {
            get
            {
                return _PatientID;
            }
            set
            {
                OnPatientIDChanging(value);
                ReportPropertyChanging("PatientID");
                _PatientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientID");
                OnPatientIDChanged();
            }
        }
        private global::System.Int32 _PatientID;
        partial void OnPatientIDChanging(global::System.Int32 value);
        partial void OnPatientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicMaterialID
        {
            get
            {
                return _ClinicMaterialID;
            }
            set
            {
                OnClinicMaterialIDChanging(value);
                ReportPropertyChanging("ClinicMaterialID");
                _ClinicMaterialID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicMaterialID");
                OnClinicMaterialIDChanged();
            }
        }
        private global::System.Int32 _ClinicMaterialID;
        partial void OnClinicMaterialIDChanging(global::System.Int32 value);
        partial void OnClinicMaterialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrganismTypeID
        {
            get
            {
                return _OrganismTypeID;
            }
            set
            {
                OnOrganismTypeIDChanging(value);
                ReportPropertyChanging("OrganismTypeID");
                _OrganismTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganismTypeID");
                OnOrganismTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrganismTypeID;
        partial void OnOrganismTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrganismTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorID
        {
            get
            {
                return _DoctorID;
            }
            set
            {
                OnDoctorIDChanging(value);
                ReportPropertyChanging("DoctorID");
                _DoctorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorID");
                OnDoctorIDChanged();
            }
        }
        private global::System.Int32 _DoctorID;
        partial void OnDoctorIDChanging(global::System.Int32 value);
        partial void OnDoctorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                OnClinicIDChanging(value);
                ReportPropertyChanging("ClinicID");
                _ClinicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicID");
                OnClinicIDChanged();
            }
        }
        private global::System.Int32 _ClinicID;
        partial void OnClinicIDChanging(global::System.Int32 value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClinicContractID
        {
            get
            {
                return _ClinicContractID;
            }
            set
            {
                OnClinicContractIDChanging(value);
                ReportPropertyChanging("ClinicContractID");
                _ClinicContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicContractID");
                OnClinicContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClinicContractID;
        partial void OnClinicContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnClinicContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CenterProjectID
        {
            get
            {
                return _CenterProjectID;
            }
            set
            {
                OnCenterProjectIDChanging(value);
                ReportPropertyChanging("CenterProjectID");
                _CenterProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CenterProjectID");
                OnCenterProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CenterProjectID;
        partial void OnCenterProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnCenterProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SamplePaymentTypeID
        {
            get
            {
                return _SamplePaymentTypeID;
            }
            set
            {
                OnSamplePaymentTypeIDChanging(value);
                ReportPropertyChanging("SamplePaymentTypeID");
                _SamplePaymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SamplePaymentTypeID");
                OnSamplePaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SamplePaymentTypeID;
        partial void OnSamplePaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnSamplePaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RemoveReasonID
        {
            get
            {
                return _RemoveReasonID;
            }
            set
            {
                OnRemoveReasonIDChanging(value);
                ReportPropertyChanging("RemoveReasonID");
                _RemoveReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemoveReasonID");
                OnRemoveReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RemoveReasonID;
        partial void OnRemoveReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnRemoveReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SampleNumber
        {
            get
            {
                return _SampleNumber;
            }
            set
            {
                OnSampleNumberChanging(value);
                ReportPropertyChanging("SampleNumber");
                _SampleNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleNumber");
                OnSampleNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _SampleNumber;
        partial void OnSampleNumberChanging(Nullable<global::System.Int32> value);
        partial void OnSampleNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabNumber
        {
            get
            {
                return _LabNumber;
            }
            set
            {
                OnLabNumberChanging(value);
                ReportPropertyChanging("LabNumber");
                _LabNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabNumber");
                OnLabNumberChanged();
            }
        }
        private global::System.String _LabNumber;
        partial void OnLabNumberChanging(global::System.String value);
        partial void OnLabNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumberFromCenter
        {
            get
            {
                return _NumberFromCenter;
            }
            set
            {
                OnNumberFromCenterChanging(value);
                ReportPropertyChanging("NumberFromCenter");
                _NumberFromCenter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NumberFromCenter");
                OnNumberFromCenterChanged();
            }
        }
        private global::System.String _NumberFromCenter;
        partial void OnNumberFromCenterChanging(global::System.String value);
        partial void OnNumberFromCenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatetimeCapture
        {
            get
            {
                return _DatetimeCapture;
            }
            set
            {
                OnDatetimeCaptureChanging(value);
                ReportPropertyChanging("DatetimeCapture");
                _DatetimeCapture = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatetimeCapture");
                OnDatetimeCaptureChanged();
            }
        }
        private global::System.DateTime _DatetimeCapture;
        partial void OnDatetimeCaptureChanging(global::System.DateTime value);
        partial void OnDatetimeCaptureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatetimeDelivery
        {
            get
            {
                return _DatetimeDelivery;
            }
            set
            {
                OnDatetimeDeliveryChanging(value);
                ReportPropertyChanging("DatetimeDelivery");
                _DatetimeDelivery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatetimeDelivery");
                OnDatetimeDeliveryChanged();
            }
        }
        private global::System.DateTime _DatetimeDelivery;
        partial void OnDatetimeDeliveryChanging(global::System.DateTime value);
        partial void OnDatetimeDeliveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsSampleTaken
        {
            get
            {
                return _IsSampleTaken;
            }
            set
            {
                OnIsSampleTakenChanging(value);
                ReportPropertyChanging("IsSampleTaken");
                _IsSampleTaken = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSampleTaken");
                OnIsSampleTakenChanged();
            }
        }
        private Nullable<global::System.Int32> _IsSampleTaken;
        partial void OnIsSampleTakenChanging(Nullable<global::System.Int32> value);
        partial void OnIsSampleTakenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_CLINIC_MATERIAL", "ClinicMaterial")]
        public ClinicMaterial ClinicMaterial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicMaterial>("mlabModel.FK_SAMPLE_CLINIC_MATERIAL", "ClinicMaterial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicMaterial>("mlabModel.FK_SAMPLE_CLINIC_MATERIAL", "ClinicMaterial").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClinicMaterial> ClinicMaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicMaterial>("mlabModel.FK_SAMPLE_CLINIC_MATERIAL", "ClinicMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClinicMaterial>("mlabModel.FK_SAMPLE_CLINIC_MATERIAL", "ClinicMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_CLINIC", "Clinic")]
        public Clinic Clinic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_SAMPLE_CLINIC", "Clinic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_SAMPLE_CLINIC", "Clinic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clinic> ClinicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("mlabModel.FK_SAMPLE_CLINIC", "Clinic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clinic>("mlabModel.FK_SAMPLE_CLINIC", "Clinic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_CLINIC_CONTRACT", "ClinicsAndContract")]
        public ClinicsAndContract ClinicsAndContract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicsAndContract>("mlabModel.FK_SAMPLE_CLINIC_CONTRACT", "ClinicsAndContract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicsAndContract>("mlabModel.FK_SAMPLE_CLINIC_CONTRACT", "ClinicsAndContract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClinicsAndContract> ClinicsAndContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicsAndContract>("mlabModel.FK_SAMPLE_CLINIC_CONTRACT", "ClinicsAndContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClinicsAndContract>("mlabModel.FK_SAMPLE_CLINIC_CONTRACT", "ClinicsAndContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_DOCTOR", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("mlabModel.FK_SAMPLE_DOCTOR", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("mlabModel.FK_SAMPLE_DOCTOR", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("mlabModel.FK_SAMPLE_DOCTOR", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("mlabModel.FK_SAMPLE_DOCTOR", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_MB_ANALYSIS_SAMPLE", "MBAnalysi")]
        public EntityCollection<MBAnalysi> MBAnalysis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_SAMPLE", "MBAnalysi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MBAnalysi>("mlabModel.FK_MB_ANALYSIS_SAMPLE", "MBAnalysi", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_ORGANISM_TYPE", "OrganismType")]
        public OrganismType OrganismType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("mlabModel.FK_SAMPLE_ORGANISM_TYPE", "OrganismType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("mlabModel.FK_SAMPLE_ORGANISM_TYPE", "OrganismType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganismType> OrganismTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("mlabModel.FK_SAMPLE_ORGANISM_TYPE", "OrganismType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganismType>("mlabModel.FK_SAMPLE_ORGANISM_TYPE", "OrganismType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_PATIENT", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("mlabModel.FK_SAMPLE_PATIENT", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("mlabModel.FK_SAMPLE_PATIENT", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("mlabModel.FK_SAMPLE_PATIENT", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("mlabModel.FK_SAMPLE_PATIENT", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_REMOVE_REASON", "RemoveReason")]
        public RemoveReason RemoveReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemoveReason>("mlabModel.FK_SAMPLE_REMOVE_REASON", "RemoveReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemoveReason>("mlabModel.FK_SAMPLE_REMOVE_REASON", "RemoveReason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RemoveReason> RemoveReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemoveReason>("mlabModel.FK_SAMPLE_REMOVE_REASON", "RemoveReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RemoveReason>("mlabModel.FK_SAMPLE_REMOVE_REASON", "RemoveReason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_RO_Samples", "RO")]
        public EntityCollection<RO> ROes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RO>("mlabModel.FK_RO_Samples", "RO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RO>("mlabModel.FK_RO_Samples", "RO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "SamplePaymentType")]
        public SamplePaymentType SamplePaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SamplePaymentType>("mlabModel.FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "SamplePaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SamplePaymentType>("mlabModel.FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "SamplePaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SamplePaymentType> SamplePaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SamplePaymentType>("mlabModel.FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "SamplePaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SamplePaymentType>("mlabModel.FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "SamplePaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "SamplesAndAdditionalService")]
        public EntityCollection<SamplesAndAdditionalService> SamplesAndAdditionalServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SamplesAndAdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "SamplesAndAdditionalService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SamplesAndAdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "SamplesAndAdditionalService", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="SamplePaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SamplePaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SamplePaymentType object.
        /// </summary>
        /// <param name="samplePaymentTypeID">Initial value of the SamplePaymentTypeID property.</param>
        public static SamplePaymentType CreateSamplePaymentType(global::System.Int32 samplePaymentTypeID)
        {
            SamplePaymentType samplePaymentType = new SamplePaymentType();
            samplePaymentType.SamplePaymentTypeID = samplePaymentTypeID;
            return samplePaymentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SamplePaymentTypeID
        {
            get
            {
                return _SamplePaymentTypeID;
            }
            set
            {
                if (_SamplePaymentTypeID != value)
                {
                    OnSamplePaymentTypeIDChanging(value);
                    ReportPropertyChanging("SamplePaymentTypeID");
                    _SamplePaymentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SamplePaymentTypeID");
                    OnSamplePaymentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SamplePaymentTypeID;
        partial void OnSamplePaymentTypeIDChanging(global::System.Int32 value);
        partial void OnSamplePaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "Sample")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("mlabModel.FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("mlabModel.FK_SAMPLE_SAMPLE_PAYMENT_TYPE", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="SamplesAndAdditionalService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SamplesAndAdditionalService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SamplesAndAdditionalService object.
        /// </summary>
        /// <param name="sampleAndAdditionalServiceID">Initial value of the SampleAndAdditionalServiceID property.</param>
        public static SamplesAndAdditionalService CreateSamplesAndAdditionalService(global::System.Int32 sampleAndAdditionalServiceID)
        {
            SamplesAndAdditionalService samplesAndAdditionalService = new SamplesAndAdditionalService();
            samplesAndAdditionalService.SampleAndAdditionalServiceID = sampleAndAdditionalServiceID;
            return samplesAndAdditionalService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleAndAdditionalServiceID
        {
            get
            {
                return _SampleAndAdditionalServiceID;
            }
            set
            {
                if (_SampleAndAdditionalServiceID != value)
                {
                    OnSampleAndAdditionalServiceIDChanging(value);
                    ReportPropertyChanging("SampleAndAdditionalServiceID");
                    _SampleAndAdditionalServiceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SampleAndAdditionalServiceID");
                    OnSampleAndAdditionalServiceIDChanged();
                }
            }
        }
        private global::System.Int32 _SampleAndAdditionalServiceID;
        partial void OnSampleAndAdditionalServiceIDChanging(global::System.Int32 value);
        partial void OnSampleAndAdditionalServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                OnSampleIDChanging(value);
                ReportPropertyChanging("SampleID");
                _SampleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleID");
                OnSampleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SampleID;
        partial void OnSampleIDChanging(Nullable<global::System.Int32> value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdditionalServiceID
        {
            get
            {
                return _AdditionalServiceID;
            }
            set
            {
                OnAdditionalServiceIDChanging(value);
                ReportPropertyChanging("AdditionalServiceID");
                _AdditionalServiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionalServiceID");
                OnAdditionalServiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdditionalServiceID;
        partial void OnAdditionalServiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdditionalServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "AdditionalService")]
        public AdditionalService AdditionalService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "AdditionalService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "AdditionalService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdditionalService> AdditionalServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "AdditionalService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdditionalService>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_ADDITIONAL_SERVICE", "AdditionalService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mlabModel", "FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "Sample")]
        public Sample Sample
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "Sample").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "Sample").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sample> SampleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "Sample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sample>("mlabModel.FK_SAMPLE_ADDITIONAL_SERVICE_SAMPLE", "Sample", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="Value")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Value : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Value object.
        /// </summary>
        /// <param name="valueID">Initial value of the ValueID property.</param>
        /// <param name="valueNumber">Initial value of the ValueNumber property.</param>
        public static Value CreateValue(global::System.Int32 valueID, global::System.Single valueNumber)
        {
            Value value = new Value();
            value.ValueID = valueID;
            value.ValueNumber = valueNumber;
            return value;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValueID
        {
            get
            {
                return _ValueID;
            }
            set
            {
                if (_ValueID != value)
                {
                    OnValueIDChanging(value);
                    ReportPropertyChanging("ValueID");
                    _ValueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValueID");
                    OnValueIDChanged();
                }
            }
        }
        private global::System.Int32 _ValueID;
        partial void OnValueIDChanging(global::System.Int32 value);
        partial void OnValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single ValueNumber
        {
            get
            {
                return _ValueNumber;
            }
            set
            {
                OnValueNumberChanging(value);
                ReportPropertyChanging("ValueNumber");
                _ValueNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueNumber");
                OnValueNumberChanged();
            }
        }
        private global::System.Single _ValueNumber;
        partial void OnValueNumberChanging(global::System.Single value);
        partial void OnValueNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vw_AdditionalServiceListWithLogic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_AdditionalServiceListWithLogic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_AdditionalServiceListWithLogic object.
        /// </summary>
        /// <param name="additionalServiceID">Initial value of the AdditionalServiceID property.</param>
        /// <param name="descriptionRus">Initial value of the DescriptionRus property.</param>
        public static vw_AdditionalServiceListWithLogic Createvw_AdditionalServiceListWithLogic(global::System.Int32 additionalServiceID, global::System.String descriptionRus)
        {
            vw_AdditionalServiceListWithLogic vw_AdditionalServiceListWithLogic = new vw_AdditionalServiceListWithLogic();
            vw_AdditionalServiceListWithLogic.AdditionalServiceID = additionalServiceID;
            vw_AdditionalServiceListWithLogic.DescriptionRus = descriptionRus;
            return vw_AdditionalServiceListWithLogic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdditionalServiceID
        {
            get
            {
                return _AdditionalServiceID;
            }
            set
            {
                if (_AdditionalServiceID != value)
                {
                    OnAdditionalServiceIDChanging(value);
                    ReportPropertyChanging("AdditionalServiceID");
                    _AdditionalServiceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdditionalServiceID");
                    OnAdditionalServiceIDChanged();
                }
            }
        }
        private global::System.Int32 _AdditionalServiceID;
        partial void OnAdditionalServiceIDChanging(global::System.Int32 value);
        partial void OnAdditionalServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsInUse
        {
            get
            {
                return _IsInUse;
            }
            set
            {
                OnIsInUseChanging(value);
                ReportPropertyChanging("IsInUse");
                _IsInUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInUse");
                OnIsInUseChanged();
            }
        }
        private Nullable<global::System.Int32> _IsInUse;
        partial void OnIsInUseChanging(Nullable<global::System.Int32> value);
        partial void OnIsInUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                if (_DescriptionRus != value)
                {
                    OnDescriptionRusChanging(value);
                    ReportPropertyChanging("DescriptionRus");
                    _DescriptionRus = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DescriptionRus");
                    OnDescriptionRusChanged();
                }
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vw_ClinicList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_ClinicList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_ClinicList object.
        /// </summary>
        /// <param name="clinicGroupID">Initial value of the ClinicGroupID property.</param>
        /// <param name="clinicID">Initial value of the ClinicID property.</param>
        /// <param name="clinicGroupDesc">Initial value of the ClinicGroupDesc property.</param>
        /// <param name="clinicDesc">Initial value of the ClinicDesc property.</param>
        public static vw_ClinicList Createvw_ClinicList(global::System.Int32 clinicGroupID, global::System.Int32 clinicID, global::System.String clinicGroupDesc, global::System.String clinicDesc)
        {
            vw_ClinicList vw_ClinicList = new vw_ClinicList();
            vw_ClinicList.ClinicGroupID = clinicGroupID;
            vw_ClinicList.ClinicID = clinicID;
            vw_ClinicList.ClinicGroupDesc = clinicGroupDesc;
            vw_ClinicList.ClinicDesc = clinicDesc;
            return vw_ClinicList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicGroupID
        {
            get
            {
                return _ClinicGroupID;
            }
            set
            {
                if (_ClinicGroupID != value)
                {
                    OnClinicGroupIDChanging(value);
                    ReportPropertyChanging("ClinicGroupID");
                    _ClinicGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicGroupID");
                    OnClinicGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicGroupID;
        partial void OnClinicGroupIDChanging(global::System.Int32 value);
        partial void OnClinicGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                if (_ClinicID != value)
                {
                    OnClinicIDChanging(value);
                    ReportPropertyChanging("ClinicID");
                    _ClinicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicID");
                    OnClinicIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicID;
        partial void OnClinicIDChanging(global::System.Int32 value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicGroupDesc
        {
            get
            {
                return _ClinicGroupDesc;
            }
            set
            {
                if (_ClinicGroupDesc != value)
                {
                    OnClinicGroupDescChanging(value);
                    ReportPropertyChanging("ClinicGroupDesc");
                    _ClinicGroupDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicGroupDesc");
                    OnClinicGroupDescChanged();
                }
            }
        }
        private global::System.String _ClinicGroupDesc;
        partial void OnClinicGroupDescChanging(global::System.String value);
        partial void OnClinicGroupDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClinicCode
        {
            get
            {
                return _ClinicCode;
            }
            set
            {
                OnClinicCodeChanging(value);
                ReportPropertyChanging("ClinicCode");
                _ClinicCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClinicCode");
                OnClinicCodeChanged();
            }
        }
        private global::System.String _ClinicCode;
        partial void OnClinicCodeChanging(global::System.String value);
        partial void OnClinicCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicDesc
        {
            get
            {
                return _ClinicDesc;
            }
            set
            {
                if (_ClinicDesc != value)
                {
                    OnClinicDescChanging(value);
                    ReportPropertyChanging("ClinicDesc");
                    _ClinicDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicDesc");
                    OnClinicDescChanged();
                }
            }
        }
        private global::System.String _ClinicDesc;
        partial void OnClinicDescChanging(global::System.String value);
        partial void OnClinicDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClinicGroupINN
        {
            get
            {
                return _ClinicGroupINN;
            }
            set
            {
                OnClinicGroupINNChanging(value);
                ReportPropertyChanging("ClinicGroupINN");
                _ClinicGroupINN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClinicGroupINN");
                OnClinicGroupINNChanged();
            }
        }
        private global::System.String _ClinicGroupINN;
        partial void OnClinicGroupINNChanging(global::System.String value);
        partial void OnClinicGroupINNChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vw_MBAnalysisTypeWithLogic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_MBAnalysisTypeWithLogic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_MBAnalysisTypeWithLogic object.
        /// </summary>
        /// <param name="mBAnalysisTypeID">Initial value of the MBAnalysisTypeID property.</param>
        /// <param name="isInUse">Initial value of the IsInUse property.</param>
        /// <param name="logicID">Initial value of the LogicID property.</param>
        /// <param name="expr1">Initial value of the Expr1 property.</param>
        /// <param name="expr2">Initial value of the Expr2 property.</param>
        public static vw_MBAnalysisTypeWithLogic Createvw_MBAnalysisTypeWithLogic(global::System.Int32 mBAnalysisTypeID, global::System.Byte isInUse, global::System.Int32 logicID, global::System.String expr1, global::System.String expr2)
        {
            vw_MBAnalysisTypeWithLogic vw_MBAnalysisTypeWithLogic = new vw_MBAnalysisTypeWithLogic();
            vw_MBAnalysisTypeWithLogic.MBAnalysisTypeID = mBAnalysisTypeID;
            vw_MBAnalysisTypeWithLogic.IsInUse = isInUse;
            vw_MBAnalysisTypeWithLogic.LogicID = logicID;
            vw_MBAnalysisTypeWithLogic.Expr1 = expr1;
            vw_MBAnalysisTypeWithLogic.Expr2 = expr2;
            return vw_MBAnalysisTypeWithLogic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                if (_MBAnalysisTypeID != value)
                {
                    OnMBAnalysisTypeIDChanging(value);
                    ReportPropertyChanging("MBAnalysisTypeID");
                    _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisTypeID");
                    OnMBAnalysisTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionEng
        {
            get
            {
                return _DescriptionEng;
            }
            set
            {
                OnDescriptionEngChanging(value);
                ReportPropertyChanging("DescriptionEng");
                _DescriptionEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionEng");
                OnDescriptionEngChanged();
            }
        }
        private global::System.String _DescriptionEng;
        partial void OnDescriptionEngChanging(global::System.String value);
        partial void OnDescriptionEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsInUse
        {
            get
            {
                return _IsInUse;
            }
            set
            {
                if (_IsInUse != value)
                {
                    OnIsInUseChanging(value);
                    ReportPropertyChanging("IsInUse");
                    _IsInUse = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsInUse");
                    OnIsInUseChanged();
                }
            }
        }
        private global::System.Byte _IsInUse;
        partial void OnIsInUseChanging(global::System.Byte value);
        partial void OnIsInUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suser
        {
            get
            {
                return _Suser;
            }
            set
            {
                OnSuserChanging(value);
                ReportPropertyChanging("Suser");
                _Suser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suser");
                OnSuserChanged();
            }
        }
        private global::System.String _Suser;
        partial void OnSuserChanging(global::System.String value);
        partial void OnSuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogicID
        {
            get
            {
                return _LogicID;
            }
            set
            {
                if (_LogicID != value)
                {
                    OnLogicIDChanging(value);
                    ReportPropertyChanging("LogicID");
                    _LogicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogicID");
                    OnLogicIDChanged();
                }
            }
        }
        private global::System.Int32 _LogicID;
        partial void OnLogicIDChanging(global::System.Int32 value);
        partial void OnLogicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Expr1
        {
            get
            {
                return _Expr1;
            }
            set
            {
                if (_Expr1 != value)
                {
                    OnExpr1Changing(value);
                    ReportPropertyChanging("Expr1");
                    _Expr1 = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Expr1");
                    OnExpr1Changed();
                }
            }
        }
        private global::System.String _Expr1;
        partial void OnExpr1Changing(global::System.String value);
        partial void OnExpr1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Expr2
        {
            get
            {
                return _Expr2;
            }
            set
            {
                if (_Expr2 != value)
                {
                    OnExpr2Changing(value);
                    ReportPropertyChanging("Expr2");
                    _Expr2 = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Expr2");
                    OnExpr2Changed();
                }
            }
        }
        private global::System.String _Expr2;
        partial void OnExpr2Changing(global::System.String value);
        partial void OnExpr2Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vwClinicContractMBAnalysisPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwClinicContractMBAnalysisPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwClinicContractMBAnalysisPrice object.
        /// </summary>
        /// <param name="clinicContractID">Initial value of the ClinicContractID property.</param>
        /// <param name="clinicID">Initial value of the ClinicID property.</param>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        public static vwClinicContractMBAnalysisPrice CreatevwClinicContractMBAnalysisPrice(global::System.Int32 clinicContractID, global::System.Int32 clinicID, global::System.Int32 contractID)
        {
            vwClinicContractMBAnalysisPrice vwClinicContractMBAnalysisPrice = new vwClinicContractMBAnalysisPrice();
            vwClinicContractMBAnalysisPrice.ClinicContractID = clinicContractID;
            vwClinicContractMBAnalysisPrice.ClinicID = clinicID;
            vwClinicContractMBAnalysisPrice.ContractID = contractID;
            return vwClinicContractMBAnalysisPrice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicContractID
        {
            get
            {
                return _ClinicContractID;
            }
            set
            {
                if (_ClinicContractID != value)
                {
                    OnClinicContractIDChanging(value);
                    ReportPropertyChanging("ClinicContractID");
                    _ClinicContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicContractID");
                    OnClinicContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicContractID;
        partial void OnClinicContractIDChanging(global::System.Int32 value);
        partial void OnClinicContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                if (_ClinicID != value)
                {
                    OnClinicIDChanging(value);
                    ReportPropertyChanging("ClinicID");
                    _ClinicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicID");
                    OnClinicIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicID;
        partial void OnClinicIDChanging(global::System.Int32 value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                if (_ContractID != value)
                {
                    OnContractIDChanging(value);
                    ReportPropertyChanging("ContractID");
                    _ContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractID");
                    OnContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractDesc
        {
            get
            {
                return _ContractDesc;
            }
            set
            {
                OnContractDescChanging(value);
                ReportPropertyChanging("ContractDesc");
                _ContractDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContractDesc");
                OnContractDescChanged();
            }
        }
        private global::System.String _ContractDesc;
        partial void OnContractDescChanging(global::System.String value);
        partial void OnContractDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentTypeID
        {
            get
            {
                return _PaymentTypeID;
            }
            set
            {
                OnPaymentTypeIDChanging(value);
                ReportPropertyChanging("PaymentTypeID");
                _PaymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTypeID");
                OnPaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentTypeID;
        partial void OnPaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentTypeDesc
        {
            get
            {
                return _PaymentTypeDesc;
            }
            set
            {
                OnPaymentTypeDescChanging(value);
                ReportPropertyChanging("PaymentTypeDesc");
                _PaymentTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentTypeDesc");
                OnPaymentTypeDescChanged();
            }
        }
        private global::System.String _PaymentTypeDesc;
        partial void OnPaymentTypeDescChanging(global::System.String value);
        partial void OnPaymentTypeDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                OnMBAnalysisTypeIDChanging(value);
                ReportPropertyChanging("MBAnalysisTypeID");
                _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisTypeID");
                OnMBAnalysisTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vwContract_Clinic_Analysis_ClinicMaterial_ForReports")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwContract_Clinic_Analysis_ClinicMaterial_ForReports : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwContract_Clinic_Analysis_ClinicMaterial_ForReports object.
        /// </summary>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        /// <param name="clinicID">Initial value of the ClinicID property.</param>
        /// <param name="clinicDesc">Initial value of the ClinicDesc property.</param>
        /// <param name="clinicGroupID">Initial value of the ClinicGroupID property.</param>
        /// <param name="clinicGroupDesc">Initial value of the ClinicGroupDesc property.</param>
        /// <param name="clinicContractID">Initial value of the ClinicContractID property.</param>
        /// <param name="mBAnalysisTypeID">Initial value of the MBAnalysisTypeID property.</param>
        /// <param name="clinicMaterialID">Initial value of the ClinicMaterialID property.</param>
        /// <param name="clinicMaterialDesc">Initial value of the ClinicMaterialDesc property.</param>
        public static vwContract_Clinic_Analysis_ClinicMaterial_ForReports CreatevwContract_Clinic_Analysis_ClinicMaterial_ForReports(global::System.Int32 contractID, global::System.Int32 clinicID, global::System.String clinicDesc, global::System.Int32 clinicGroupID, global::System.String clinicGroupDesc, global::System.Int32 clinicContractID, global::System.Int32 mBAnalysisTypeID, global::System.Int32 clinicMaterialID, global::System.String clinicMaterialDesc)
        {
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports vwContract_Clinic_Analysis_ClinicMaterial_ForReports = new vwContract_Clinic_Analysis_ClinicMaterial_ForReports();
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ContractID = contractID;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ClinicID = clinicID;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ClinicDesc = clinicDesc;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ClinicGroupID = clinicGroupID;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ClinicGroupDesc = clinicGroupDesc;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ClinicContractID = clinicContractID;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.MBAnalysisTypeID = mBAnalysisTypeID;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ClinicMaterialID = clinicMaterialID;
            vwContract_Clinic_Analysis_ClinicMaterial_ForReports.ClinicMaterialDesc = clinicMaterialDesc;
            return vwContract_Clinic_Analysis_ClinicMaterial_ForReports;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                if (_ContractID != value)
                {
                    OnContractIDChanging(value);
                    ReportPropertyChanging("ContractID");
                    _ContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractID");
                    OnContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractDesc
        {
            get
            {
                return _ContractDesc;
            }
            set
            {
                OnContractDescChanging(value);
                ReportPropertyChanging("ContractDesc");
                _ContractDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContractDesc");
                OnContractDescChanged();
            }
        }
        private global::System.String _ContractDesc;
        partial void OnContractDescChanging(global::System.String value);
        partial void OnContractDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                if (_ClinicID != value)
                {
                    OnClinicIDChanging(value);
                    ReportPropertyChanging("ClinicID");
                    _ClinicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicID");
                    OnClinicIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicID;
        partial void OnClinicIDChanging(global::System.Int32 value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicDesc
        {
            get
            {
                return _ClinicDesc;
            }
            set
            {
                if (_ClinicDesc != value)
                {
                    OnClinicDescChanging(value);
                    ReportPropertyChanging("ClinicDesc");
                    _ClinicDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicDesc");
                    OnClinicDescChanged();
                }
            }
        }
        private global::System.String _ClinicDesc;
        partial void OnClinicDescChanging(global::System.String value);
        partial void OnClinicDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicGroupID
        {
            get
            {
                return _ClinicGroupID;
            }
            set
            {
                if (_ClinicGroupID != value)
                {
                    OnClinicGroupIDChanging(value);
                    ReportPropertyChanging("ClinicGroupID");
                    _ClinicGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicGroupID");
                    OnClinicGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicGroupID;
        partial void OnClinicGroupIDChanging(global::System.Int32 value);
        partial void OnClinicGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicGroupDesc
        {
            get
            {
                return _ClinicGroupDesc;
            }
            set
            {
                if (_ClinicGroupDesc != value)
                {
                    OnClinicGroupDescChanging(value);
                    ReportPropertyChanging("ClinicGroupDesc");
                    _ClinicGroupDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicGroupDesc");
                    OnClinicGroupDescChanged();
                }
            }
        }
        private global::System.String _ClinicGroupDesc;
        partial void OnClinicGroupDescChanging(global::System.String value);
        partial void OnClinicGroupDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicContractID
        {
            get
            {
                return _ClinicContractID;
            }
            set
            {
                if (_ClinicContractID != value)
                {
                    OnClinicContractIDChanging(value);
                    ReportPropertyChanging("ClinicContractID");
                    _ClinicContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicContractID");
                    OnClinicContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicContractID;
        partial void OnClinicContractIDChanging(global::System.Int32 value);
        partial void OnClinicContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                if (_MBAnalysisTypeID != value)
                {
                    OnMBAnalysisTypeIDChanging(value);
                    ReportPropertyChanging("MBAnalysisTypeID");
                    _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisTypeID");
                    OnMBAnalysisTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBAnalysisDesc
        {
            get
            {
                return _MBAnalysisDesc;
            }
            set
            {
                OnMBAnalysisDescChanging(value);
                ReportPropertyChanging("MBAnalysisDesc");
                _MBAnalysisDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBAnalysisDesc");
                OnMBAnalysisDescChanged();
            }
        }
        private global::System.String _MBAnalysisDesc;
        partial void OnMBAnalysisDescChanging(global::System.String value);
        partial void OnMBAnalysisDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicMaterialID
        {
            get
            {
                return _ClinicMaterialID;
            }
            set
            {
                if (_ClinicMaterialID != value)
                {
                    OnClinicMaterialIDChanging(value);
                    ReportPropertyChanging("ClinicMaterialID");
                    _ClinicMaterialID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicMaterialID");
                    OnClinicMaterialIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicMaterialID;
        partial void OnClinicMaterialIDChanging(global::System.Int32 value);
        partial void OnClinicMaterialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicMaterialDesc
        {
            get
            {
                return _ClinicMaterialDesc;
            }
            set
            {
                if (_ClinicMaterialDesc != value)
                {
                    OnClinicMaterialDescChanging(value);
                    ReportPropertyChanging("ClinicMaterialDesc");
                    _ClinicMaterialDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicMaterialDesc");
                    OnClinicMaterialDescChanged();
                }
            }
        }
        private global::System.String _ClinicMaterialDesc;
        partial void OnClinicMaterialDescChanging(global::System.String value);
        partial void OnClinicMaterialDescChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vwMBAnalysis_Bacterioscopy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwMBAnalysis_Bacterioscopy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwMBAnalysis_Bacterioscopy object.
        /// </summary>
        /// <param name="mBAnalysisBacterioscopyID">Initial value of the MBAnalysisBacterioscopyID property.</param>
        public static vwMBAnalysis_Bacterioscopy CreatevwMBAnalysis_Bacterioscopy(global::System.Int32 mBAnalysisBacterioscopyID)
        {
            vwMBAnalysis_Bacterioscopy vwMBAnalysis_Bacterioscopy = new vwMBAnalysis_Bacterioscopy();
            vwMBAnalysis_Bacterioscopy.MBAnalysisBacterioscopyID = mBAnalysisBacterioscopyID;
            return vwMBAnalysis_Bacterioscopy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisBacterioscopyID
        {
            get
            {
                return _MBAnalysisBacterioscopyID;
            }
            set
            {
                if (_MBAnalysisBacterioscopyID != value)
                {
                    OnMBAnalysisBacterioscopyIDChanging(value);
                    ReportPropertyChanging("MBAnalysisBacterioscopyID");
                    _MBAnalysisBacterioscopyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisBacterioscopyID");
                    OnMBAnalysisBacterioscopyIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisBacterioscopyID;
        partial void OnMBAnalysisBacterioscopyIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisBacterioscopyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBAnalysisID
        {
            get
            {
                return _MBAnalysisID;
            }
            set
            {
                OnMBAnalysisIDChanging(value);
                ReportPropertyChanging("MBAnalysisID");
                _MBAnalysisID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisID");
                OnMBAnalysisIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBAnalysisID;
        partial void OnMBAnalysisIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBAnalysisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionRus
        {
            get
            {
                return _DescriptionRus;
            }
            set
            {
                OnDescriptionRusChanging(value);
                ReportPropertyChanging("DescriptionRus");
                _DescriptionRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionRus");
                OnDescriptionRusChanged();
            }
        }
        private global::System.String _DescriptionRus;
        partial void OnDescriptionRusChanging(global::System.String value);
        partial void OnDescriptionRusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewField
        {
            get
            {
                return _ViewField;
            }
            set
            {
                OnViewFieldChanging(value);
                ReportPropertyChanging("ViewField");
                _ViewField = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewField");
                OnViewFieldChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewField;
        partial void OnViewFieldChanging(Nullable<global::System.Int32> value);
        partial void OnViewFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vwMBAnalysisForSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwMBAnalysisForSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwMBAnalysisForSample object.
        /// </summary>
        /// <param name="mBAnalysisID">Initial value of the MBAnalysisID property.</param>
        /// <param name="sampleID">Initial value of the SampleID property.</param>
        /// <param name="mBAnalysisTypeID">Initial value of the MBAnalysisTypeID property.</param>
        /// <param name="patientID">Initial value of the PatientID property.</param>
        public static vwMBAnalysisForSample CreatevwMBAnalysisForSample(global::System.Int32 mBAnalysisID, global::System.Int32 sampleID, global::System.Int32 mBAnalysisTypeID, global::System.Int32 patientID)
        {
            vwMBAnalysisForSample vwMBAnalysisForSample = new vwMBAnalysisForSample();
            vwMBAnalysisForSample.MBAnalysisID = mBAnalysisID;
            vwMBAnalysisForSample.SampleID = sampleID;
            vwMBAnalysisForSample.MBAnalysisTypeID = mBAnalysisTypeID;
            vwMBAnalysisForSample.PatientID = patientID;
            return vwMBAnalysisForSample;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisID
        {
            get
            {
                return _MBAnalysisID;
            }
            set
            {
                if (_MBAnalysisID != value)
                {
                    OnMBAnalysisIDChanging(value);
                    ReportPropertyChanging("MBAnalysisID");
                    _MBAnalysisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisID");
                    OnMBAnalysisIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisID;
        partial void OnMBAnalysisIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                if (_SampleID != value)
                {
                    OnSampleIDChanging(value);
                    ReportPropertyChanging("SampleID");
                    _SampleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SampleID");
                    OnSampleIDChanged();
                }
            }
        }
        private global::System.Int32 _SampleID;
        partial void OnSampleIDChanging(global::System.Int32 value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                if (_MBAnalysisTypeID != value)
                {
                    OnMBAnalysisTypeIDChanging(value);
                    ReportPropertyChanging("MBAnalysisTypeID");
                    _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisTypeID");
                    OnMBAnalysisTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBAnalysisTypesDesc
        {
            get
            {
                return _MBAnalysisTypesDesc;
            }
            set
            {
                OnMBAnalysisTypesDescChanging(value);
                ReportPropertyChanging("MBAnalysisTypesDesc");
                _MBAnalysisTypesDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBAnalysisTypesDesc");
                OnMBAnalysisTypesDescChanged();
            }
        }
        private global::System.String _MBAnalysisTypesDesc;
        partial void OnMBAnalysisTypesDescChanging(global::System.String value);
        partial void OnMBAnalysisTypesDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBStatusID
        {
            get
            {
                return _MBStatusID;
            }
            set
            {
                OnMBStatusIDChanging(value);
                ReportPropertyChanging("MBStatusID");
                _MBStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBStatusID");
                OnMBStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBStatusID;
        partial void OnMBStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBStatusesDesc
        {
            get
            {
                return _MBStatusesDesc;
            }
            set
            {
                OnMBStatusesDescChanging(value);
                ReportPropertyChanging("MBStatusesDesc");
                _MBStatusesDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBStatusesDesc");
                OnMBStatusesDescChanged();
            }
        }
        private global::System.String _MBStatusesDesc;
        partial void OnMBStatusesDescChanging(global::System.String value);
        partial void OnMBStatusesDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBAnalysisResultID
        {
            get
            {
                return _MBAnalysisResultID;
            }
            set
            {
                OnMBAnalysisResultIDChanging(value);
                ReportPropertyChanging("MBAnalysisResultID");
                _MBAnalysisResultID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisResultID");
                OnMBAnalysisResultIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBAnalysisResultID;
        partial void OnMBAnalysisResultIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBAnalysisResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBAnalysisResultsDesc
        {
            get
            {
                return _MBAnalysisResultsDesc;
            }
            set
            {
                OnMBAnalysisResultsDescChanging(value);
                ReportPropertyChanging("MBAnalysisResultsDesc");
                _MBAnalysisResultsDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBAnalysisResultsDesc");
                OnMBAnalysisResultsDescChanged();
            }
        }
        private global::System.String _MBAnalysisResultsDesc;
        partial void OnMBAnalysisResultsDescChanging(global::System.String value);
        partial void OnMBAnalysisResultsDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientID
        {
            get
            {
                return _PatientID;
            }
            set
            {
                if (_PatientID != value)
                {
                    OnPatientIDChanging(value);
                    ReportPropertyChanging("PatientID");
                    _PatientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientID");
                    OnPatientIDChanged();
                }
            }
        }
        private global::System.Int32 _PatientID;
        partial void OnPatientIDChanging(global::System.Int32 value);
        partial void OnPatientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClinicContractID
        {
            get
            {
                return _ClinicContractID;
            }
            set
            {
                OnClinicContractIDChanging(value);
                ReportPropertyChanging("ClinicContractID");
                _ClinicContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicContractID");
                OnClinicContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClinicContractID;
        partial void OnClinicContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnClinicContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vwMBAnalysisForSampleWithPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwMBAnalysisForSampleWithPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwMBAnalysisForSampleWithPrice object.
        /// </summary>
        /// <param name="mBAnalysisID">Initial value of the MBAnalysisID property.</param>
        /// <param name="sampleID">Initial value of the SampleID property.</param>
        /// <param name="mBAnalysisTypeID">Initial value of the MBAnalysisTypeID property.</param>
        /// <param name="patientID">Initial value of the PatientID property.</param>
        public static vwMBAnalysisForSampleWithPrice CreatevwMBAnalysisForSampleWithPrice(global::System.Int32 mBAnalysisID, global::System.Int32 sampleID, global::System.Int32 mBAnalysisTypeID, global::System.Int32 patientID)
        {
            vwMBAnalysisForSampleWithPrice vwMBAnalysisForSampleWithPrice = new vwMBAnalysisForSampleWithPrice();
            vwMBAnalysisForSampleWithPrice.MBAnalysisID = mBAnalysisID;
            vwMBAnalysisForSampleWithPrice.SampleID = sampleID;
            vwMBAnalysisForSampleWithPrice.MBAnalysisTypeID = mBAnalysisTypeID;
            vwMBAnalysisForSampleWithPrice.PatientID = patientID;
            return vwMBAnalysisForSampleWithPrice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisID
        {
            get
            {
                return _MBAnalysisID;
            }
            set
            {
                if (_MBAnalysisID != value)
                {
                    OnMBAnalysisIDChanging(value);
                    ReportPropertyChanging("MBAnalysisID");
                    _MBAnalysisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisID");
                    OnMBAnalysisIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisID;
        partial void OnMBAnalysisIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                if (_SampleID != value)
                {
                    OnSampleIDChanging(value);
                    ReportPropertyChanging("SampleID");
                    _SampleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SampleID");
                    OnSampleIDChanged();
                }
            }
        }
        private global::System.Int32 _SampleID;
        partial void OnSampleIDChanging(global::System.Int32 value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                if (_MBAnalysisTypeID != value)
                {
                    OnMBAnalysisTypeIDChanging(value);
                    ReportPropertyChanging("MBAnalysisTypeID");
                    _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisTypeID");
                    OnMBAnalysisTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBAnalysisTypesDesc
        {
            get
            {
                return _MBAnalysisTypesDesc;
            }
            set
            {
                OnMBAnalysisTypesDescChanging(value);
                ReportPropertyChanging("MBAnalysisTypesDesc");
                _MBAnalysisTypesDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBAnalysisTypesDesc");
                OnMBAnalysisTypesDescChanged();
            }
        }
        private global::System.String _MBAnalysisTypesDesc;
        partial void OnMBAnalysisTypesDescChanging(global::System.String value);
        partial void OnMBAnalysisTypesDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBStatusID
        {
            get
            {
                return _MBStatusID;
            }
            set
            {
                OnMBStatusIDChanging(value);
                ReportPropertyChanging("MBStatusID");
                _MBStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBStatusID");
                OnMBStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBStatusID;
        partial void OnMBStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBStatusesDesc
        {
            get
            {
                return _MBStatusesDesc;
            }
            set
            {
                OnMBStatusesDescChanging(value);
                ReportPropertyChanging("MBStatusesDesc");
                _MBStatusesDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBStatusesDesc");
                OnMBStatusesDescChanged();
            }
        }
        private global::System.String _MBStatusesDesc;
        partial void OnMBStatusesDescChanging(global::System.String value);
        partial void OnMBStatusesDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MBAnalysisResultID
        {
            get
            {
                return _MBAnalysisResultID;
            }
            set
            {
                OnMBAnalysisResultIDChanging(value);
                ReportPropertyChanging("MBAnalysisResultID");
                _MBAnalysisResultID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MBAnalysisResultID");
                OnMBAnalysisResultIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MBAnalysisResultID;
        partial void OnMBAnalysisResultIDChanging(Nullable<global::System.Int32> value);
        partial void OnMBAnalysisResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBAnalysisResultsDesc
        {
            get
            {
                return _MBAnalysisResultsDesc;
            }
            set
            {
                OnMBAnalysisResultsDescChanging(value);
                ReportPropertyChanging("MBAnalysisResultsDesc");
                _MBAnalysisResultsDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBAnalysisResultsDesc");
                OnMBAnalysisResultsDescChanged();
            }
        }
        private global::System.String _MBAnalysisResultsDesc;
        partial void OnMBAnalysisResultsDescChanging(global::System.String value);
        partial void OnMBAnalysisResultsDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientID
        {
            get
            {
                return _PatientID;
            }
            set
            {
                if (_PatientID != value)
                {
                    OnPatientIDChanging(value);
                    ReportPropertyChanging("PatientID");
                    _PatientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientID");
                    OnPatientIDChanged();
                }
            }
        }
        private global::System.Int32 _PatientID;
        partial void OnPatientIDChanging(global::System.Int32 value);
        partial void OnPatientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClinicContractID
        {
            get
            {
                return _ClinicContractID;
            }
            set
            {
                OnClinicContractIDChanging(value);
                ReportPropertyChanging("ClinicContractID");
                _ClinicContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicContractID");
                OnClinicContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClinicContractID;
        partial void OnClinicContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnClinicContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClinicID
        {
            get
            {
                return _ClinicID;
            }
            set
            {
                OnClinicIDChanging(value);
                ReportPropertyChanging("ClinicID");
                _ClinicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicID");
                OnClinicIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClinicID;
        partial void OnClinicIDChanging(Nullable<global::System.Int32> value);
        partial void OnClinicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                OnContractIDChanging(value);
                ReportPropertyChanging("ContractID");
                _ContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractID");
                OnContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractID;
        partial void OnContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractDesc
        {
            get
            {
                return _ContractDesc;
            }
            set
            {
                OnContractDescChanging(value);
                ReportPropertyChanging("ContractDesc");
                _ContractDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContractDesc");
                OnContractDescChanged();
            }
        }
        private global::System.String _ContractDesc;
        partial void OnContractDescChanging(global::System.String value);
        partial void OnContractDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentTypeID
        {
            get
            {
                return _PaymentTypeID;
            }
            set
            {
                OnPaymentTypeIDChanging(value);
                ReportPropertyChanging("PaymentTypeID");
                _PaymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTypeID");
                OnPaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentTypeID;
        partial void OnPaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentTypeDesc
        {
            get
            {
                return _PaymentTypeDesc;
            }
            set
            {
                OnPaymentTypeDescChanging(value);
                ReportPropertyChanging("PaymentTypeDesc");
                _PaymentTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentTypeDesc");
                OnPaymentTypeDescChanged();
            }
        }
        private global::System.String _PaymentTypeDesc;
        partial void OnPaymentTypeDescChanging(global::System.String value);
        partial void OnPaymentTypeDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vwRO_ClinicalTests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwRO_ClinicalTests : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwRO_ClinicalTests object.
        /// </summary>
        /// <param name="rOID">Initial value of the ROID property.</param>
        /// <param name="mBAnalysisID">Initial value of the MBAnalysisID property.</param>
        /// <param name="methodDesc">Initial value of the MethodDesc property.</param>
        public static vwRO_ClinicalTests CreatevwRO_ClinicalTests(global::System.Int32 rOID, global::System.Int32 mBAnalysisID, global::System.String methodDesc)
        {
            vwRO_ClinicalTests vwRO_ClinicalTests = new vwRO_ClinicalTests();
            vwRO_ClinicalTests.ROID = rOID;
            vwRO_ClinicalTests.MBAnalysisID = mBAnalysisID;
            vwRO_ClinicalTests.MethodDesc = methodDesc;
            return vwRO_ClinicalTests;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ROID
        {
            get
            {
                return _ROID;
            }
            set
            {
                if (_ROID != value)
                {
                    OnROIDChanging(value);
                    ReportPropertyChanging("ROID");
                    _ROID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROID");
                    OnROIDChanged();
                }
            }
        }
        private global::System.Int32 _ROID;
        partial void OnROIDChanging(global::System.Int32 value);
        partial void OnROIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                OnSampleIDChanging(value);
                ReportPropertyChanging("SampleID");
                _SampleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleID");
                OnSampleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SampleID;
        partial void OnSampleIDChanging(Nullable<global::System.Int32> value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisID
        {
            get
            {
                return _MBAnalysisID;
            }
            set
            {
                if (_MBAnalysisID != value)
                {
                    OnMBAnalysisIDChanging(value);
                    ReportPropertyChanging("MBAnalysisID");
                    _MBAnalysisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisID");
                    OnMBAnalysisIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisID;
        partial void OnMBAnalysisIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrganismTypeID
        {
            get
            {
                return _OrganismTypeID;
            }
            set
            {
                OnOrganismTypeIDChanging(value);
                ReportPropertyChanging("OrganismTypeID");
                _OrganismTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganismTypeID");
                OnOrganismTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrganismTypeID;
        partial void OnOrganismTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrganismTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganismTypeDesc
        {
            get
            {
                return _OrganismTypeDesc;
            }
            set
            {
                OnOrganismTypeDescChanging(value);
                ReportPropertyChanging("OrganismTypeDesc");
                _OrganismTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganismTypeDesc");
                OnOrganismTypeDescChanged();
            }
        }
        private global::System.String _OrganismTypeDesc;
        partial void OnOrganismTypeDescChanging(global::System.String value);
        partial void OnOrganismTypeDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DateOfReidentify
        {
            get
            {
                return _DateOfReidentify;
            }
            set
            {
                OnDateOfReidentifyChanging(value);
                ReportPropertyChanging("DateOfReidentify");
                _DateOfReidentify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DateOfReidentify");
                OnDateOfReidentifyChanged();
            }
        }
        private global::System.String _DateOfReidentify;
        partial void OnDateOfReidentifyChanging(global::System.String value);
        partial void OnDateOfReidentifyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BacterialLoadValue
        {
            get
            {
                return _BacterialLoadValue;
            }
            set
            {
                OnBacterialLoadValueChanging(value);
                ReportPropertyChanging("BacterialLoadValue");
                _BacterialLoadValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BacterialLoadValue");
                OnBacterialLoadValueChanged();
            }
        }
        private global::System.String _BacterialLoadValue;
        partial void OnBacterialLoadValueChanging(global::System.String value);
        partial void OnBacterialLoadValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BacterialLoadUnit
        {
            get
            {
                return _BacterialLoadUnit;
            }
            set
            {
                OnBacterialLoadUnitChanging(value);
                ReportPropertyChanging("BacterialLoadUnit");
                _BacterialLoadUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BacterialLoadUnit");
                OnBacterialLoadUnitChanged();
            }
        }
        private global::System.String _BacterialLoadUnit;
        partial void OnBacterialLoadUnitChanging(global::System.String value);
        partial void OnBacterialLoadUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AntibioticDesc
        {
            get
            {
                return _AntibioticDesc;
            }
            set
            {
                OnAntibioticDescChanging(value);
                ReportPropertyChanging("AntibioticDesc");
                _AntibioticDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AntibioticDesc");
                OnAntibioticDescChanged();
            }
        }
        private global::System.String _AntibioticDesc;
        partial void OnAntibioticDescChanging(global::System.String value);
        partial void OnAntibioticDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MethodDesc
        {
            get
            {
                return _MethodDesc;
            }
            set
            {
                if (_MethodDesc != value)
                {
                    OnMethodDescChanging(value);
                    ReportPropertyChanging("MethodDesc");
                    _MethodDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MethodDesc");
                    OnMethodDescChanged();
                }
            }
        }
        private global::System.String _MethodDesc;
        partial void OnMethodDescChanging(global::System.String value);
        partial void OnMethodDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ResultValue
        {
            get
            {
                return _ResultValue;
            }
            set
            {
                OnResultValueChanging(value);
                ReportPropertyChanging("ResultValue");
                _ResultValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultValue");
                OnResultValueChanged();
            }
        }
        private Nullable<global::System.Double> _ResultValue;
        partial void OnResultValueChanging(Nullable<global::System.Double> value);
        partial void OnResultValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultSIR
        {
            get
            {
                return _ResultSIR;
            }
            set
            {
                OnResultSIRChanging(value);
                ReportPropertyChanging("ResultSIR");
                _ResultSIR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultSIR");
                OnResultSIRChanged();
            }
        }
        private global::System.String _ResultSIR;
        partial void OnResultSIRChanging(global::System.String value);
        partial void OnResultSIRChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mlabModel", Name="vwTotalInfoForReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwTotalInfoForReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwTotalInfoForReport object.
        /// </summary>
        /// <param name="sampleID">Initial value of the SampleID property.</param>
        /// <param name="patientID">Initial value of the PatientID property.</param>
        /// <param name="patientLastname">Initial value of the PatientLastname property.</param>
        /// <param name="patientInitials">Initial value of the PatientInitials property.</param>
        /// <param name="birthdate">Initial value of the Birthdate property.</param>
        /// <param name="sex">Initial value of the Sex property.</param>
        /// <param name="clinicMaterialID">Initial value of the ClinicMaterialID property.</param>
        /// <param name="clinicMaterialDesc">Initial value of the ClinicMaterialDesc property.</param>
        /// <param name="doctorID">Initial value of the DoctorID property.</param>
        /// <param name="doctorLastname">Initial value of the DoctorLastname property.</param>
        /// <param name="doctorInitials">Initial value of the DoctorInitials property.</param>
        /// <param name="clinicDesc">Initial value of the ClinicDesc property.</param>
        /// <param name="clinicGroupDesc">Initial value of the ClinicGroupDesc property.</param>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        /// <param name="mBAnalysisTypeID">Initial value of the MBAnalysisTypeID property.</param>
        /// <param name="datetimeCapture">Initial value of the DatetimeCapture property.</param>
        /// <param name="datetimeDelivery">Initial value of the DatetimeDelivery property.</param>
        public static vwTotalInfoForReport CreatevwTotalInfoForReport(global::System.Int32 sampleID, global::System.Int32 patientID, global::System.String patientLastname, global::System.String patientInitials, global::System.DateTime birthdate, global::System.String sex, global::System.Int32 clinicMaterialID, global::System.String clinicMaterialDesc, global::System.Int32 doctorID, global::System.String doctorLastname, global::System.String doctorInitials, global::System.String clinicDesc, global::System.String clinicGroupDesc, global::System.Int32 contractID, global::System.Int32 mBAnalysisTypeID, global::System.DateTime datetimeCapture, global::System.DateTime datetimeDelivery)
        {
            vwTotalInfoForReport vwTotalInfoForReport = new vwTotalInfoForReport();
            vwTotalInfoForReport.SampleID = sampleID;
            vwTotalInfoForReport.PatientID = patientID;
            vwTotalInfoForReport.PatientLastname = patientLastname;
            vwTotalInfoForReport.PatientInitials = patientInitials;
            vwTotalInfoForReport.Birthdate = birthdate;
            vwTotalInfoForReport.Sex = sex;
            vwTotalInfoForReport.ClinicMaterialID = clinicMaterialID;
            vwTotalInfoForReport.ClinicMaterialDesc = clinicMaterialDesc;
            vwTotalInfoForReport.DoctorID = doctorID;
            vwTotalInfoForReport.DoctorLastname = doctorLastname;
            vwTotalInfoForReport.DoctorInitials = doctorInitials;
            vwTotalInfoForReport.ClinicDesc = clinicDesc;
            vwTotalInfoForReport.ClinicGroupDesc = clinicGroupDesc;
            vwTotalInfoForReport.ContractID = contractID;
            vwTotalInfoForReport.MBAnalysisTypeID = mBAnalysisTypeID;
            vwTotalInfoForReport.DatetimeCapture = datetimeCapture;
            vwTotalInfoForReport.DatetimeDelivery = datetimeDelivery;
            return vwTotalInfoForReport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                if (_SampleID != value)
                {
                    OnSampleIDChanging(value);
                    ReportPropertyChanging("SampleID");
                    _SampleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SampleID");
                    OnSampleIDChanged();
                }
            }
        }
        private global::System.Int32 _SampleID;
        partial void OnSampleIDChanging(global::System.Int32 value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientID
        {
            get
            {
                return _PatientID;
            }
            set
            {
                if (_PatientID != value)
                {
                    OnPatientIDChanging(value);
                    ReportPropertyChanging("PatientID");
                    _PatientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientID");
                    OnPatientIDChanged();
                }
            }
        }
        private global::System.Int32 _PatientID;
        partial void OnPatientIDChanging(global::System.Int32 value);
        partial void OnPatientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PatientLastname
        {
            get
            {
                return _PatientLastname;
            }
            set
            {
                if (_PatientLastname != value)
                {
                    OnPatientLastnameChanging(value);
                    ReportPropertyChanging("PatientLastname");
                    _PatientLastname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PatientLastname");
                    OnPatientLastnameChanged();
                }
            }
        }
        private global::System.String _PatientLastname;
        partial void OnPatientLastnameChanging(global::System.String value);
        partial void OnPatientLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PatientInitials
        {
            get
            {
                return _PatientInitials;
            }
            set
            {
                if (_PatientInitials != value)
                {
                    OnPatientInitialsChanging(value);
                    ReportPropertyChanging("PatientInitials");
                    _PatientInitials = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PatientInitials");
                    OnPatientInitialsChanged();
                }
            }
        }
        private global::System.String _PatientInitials;
        partial void OnPatientInitialsChanging(global::System.String value);
        partial void OnPatientInitialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                if (_Birthdate != value)
                {
                    OnBirthdateChanging(value);
                    ReportPropertyChanging("Birthdate");
                    _Birthdate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Birthdate");
                    OnBirthdateChanged();
                }
            }
        }
        private global::System.DateTime _Birthdate;
        partial void OnBirthdateChanging(global::System.DateTime value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                if (_Sex != value)
                {
                    OnSexChanging(value);
                    ReportPropertyChanging("Sex");
                    _Sex = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Sex");
                    OnSexChanged();
                }
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicMaterialID
        {
            get
            {
                return _ClinicMaterialID;
            }
            set
            {
                if (_ClinicMaterialID != value)
                {
                    OnClinicMaterialIDChanging(value);
                    ReportPropertyChanging("ClinicMaterialID");
                    _ClinicMaterialID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicMaterialID");
                    OnClinicMaterialIDChanged();
                }
            }
        }
        private global::System.Int32 _ClinicMaterialID;
        partial void OnClinicMaterialIDChanging(global::System.Int32 value);
        partial void OnClinicMaterialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicMaterialDesc
        {
            get
            {
                return _ClinicMaterialDesc;
            }
            set
            {
                if (_ClinicMaterialDesc != value)
                {
                    OnClinicMaterialDescChanging(value);
                    ReportPropertyChanging("ClinicMaterialDesc");
                    _ClinicMaterialDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicMaterialDesc");
                    OnClinicMaterialDescChanged();
                }
            }
        }
        private global::System.String _ClinicMaterialDesc;
        partial void OnClinicMaterialDescChanging(global::System.String value);
        partial void OnClinicMaterialDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorID
        {
            get
            {
                return _DoctorID;
            }
            set
            {
                if (_DoctorID != value)
                {
                    OnDoctorIDChanging(value);
                    ReportPropertyChanging("DoctorID");
                    _DoctorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoctorID");
                    OnDoctorIDChanged();
                }
            }
        }
        private global::System.Int32 _DoctorID;
        partial void OnDoctorIDChanging(global::System.Int32 value);
        partial void OnDoctorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DoctorLastname
        {
            get
            {
                return _DoctorLastname;
            }
            set
            {
                if (_DoctorLastname != value)
                {
                    OnDoctorLastnameChanging(value);
                    ReportPropertyChanging("DoctorLastname");
                    _DoctorLastname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DoctorLastname");
                    OnDoctorLastnameChanged();
                }
            }
        }
        private global::System.String _DoctorLastname;
        partial void OnDoctorLastnameChanging(global::System.String value);
        partial void OnDoctorLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DoctorInitials
        {
            get
            {
                return _DoctorInitials;
            }
            set
            {
                if (_DoctorInitials != value)
                {
                    OnDoctorInitialsChanging(value);
                    ReportPropertyChanging("DoctorInitials");
                    _DoctorInitials = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DoctorInitials");
                    OnDoctorInitialsChanged();
                }
            }
        }
        private global::System.String _DoctorInitials;
        partial void OnDoctorInitialsChanging(global::System.String value);
        partial void OnDoctorInitialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClinicContractID
        {
            get
            {
                return _ClinicContractID;
            }
            set
            {
                OnClinicContractIDChanging(value);
                ReportPropertyChanging("ClinicContractID");
                _ClinicContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicContractID");
                OnClinicContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClinicContractID;
        partial void OnClinicContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnClinicContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicDesc
        {
            get
            {
                return _ClinicDesc;
            }
            set
            {
                if (_ClinicDesc != value)
                {
                    OnClinicDescChanging(value);
                    ReportPropertyChanging("ClinicDesc");
                    _ClinicDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicDesc");
                    OnClinicDescChanged();
                }
            }
        }
        private global::System.String _ClinicDesc;
        partial void OnClinicDescChanging(global::System.String value);
        partial void OnClinicDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicGroupDesc
        {
            get
            {
                return _ClinicGroupDesc;
            }
            set
            {
                if (_ClinicGroupDesc != value)
                {
                    OnClinicGroupDescChanging(value);
                    ReportPropertyChanging("ClinicGroupDesc");
                    _ClinicGroupDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClinicGroupDesc");
                    OnClinicGroupDescChanged();
                }
            }
        }
        private global::System.String _ClinicGroupDesc;
        partial void OnClinicGroupDescChanging(global::System.String value);
        partial void OnClinicGroupDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBAnalysisResultDesc
        {
            get
            {
                return _MBAnalysisResultDesc;
            }
            set
            {
                OnMBAnalysisResultDescChanging(value);
                ReportPropertyChanging("MBAnalysisResultDesc");
                _MBAnalysisResultDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBAnalysisResultDesc");
                OnMBAnalysisResultDescChanged();
            }
        }
        private global::System.String _MBAnalysisResultDesc;
        partial void OnMBAnalysisResultDescChanging(global::System.String value);
        partial void OnMBAnalysisResultDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBSatatusDesc
        {
            get
            {
                return _MBSatatusDesc;
            }
            set
            {
                OnMBSatatusDescChanging(value);
                ReportPropertyChanging("MBSatatusDesc");
                _MBSatatusDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBSatatusDesc");
                OnMBSatatusDescChanged();
            }
        }
        private global::System.String _MBSatatusDesc;
        partial void OnMBSatatusDescChanging(global::System.String value);
        partial void OnMBSatatusDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBAnalysisTypeDesc
        {
            get
            {
                return _MBAnalysisTypeDesc;
            }
            set
            {
                OnMBAnalysisTypeDescChanging(value);
                ReportPropertyChanging("MBAnalysisTypeDesc");
                _MBAnalysisTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBAnalysisTypeDesc");
                OnMBAnalysisTypeDescChanged();
            }
        }
        private global::System.String _MBAnalysisTypeDesc;
        partial void OnMBAnalysisTypeDescChanging(global::System.String value);
        partial void OnMBAnalysisTypeDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                if (_ContractID != value)
                {
                    OnContractIDChanging(value);
                    ReportPropertyChanging("ContractID");
                    _ContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractID");
                    OnContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractDesc
        {
            get
            {
                return _ContractDesc;
            }
            set
            {
                OnContractDescChanging(value);
                ReportPropertyChanging("ContractDesc");
                _ContractDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContractDesc");
                OnContractDescChanged();
            }
        }
        private global::System.String _ContractDesc;
        partial void OnContractDescChanging(global::System.String value);
        partial void OnContractDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MBAnalysisTypeID
        {
            get
            {
                return _MBAnalysisTypeID;
            }
            set
            {
                if (_MBAnalysisTypeID != value)
                {
                    OnMBAnalysisTypeIDChanging(value);
                    ReportPropertyChanging("MBAnalysisTypeID");
                    _MBAnalysisTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MBAnalysisTypeID");
                    OnMBAnalysisTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MBAnalysisTypeID;
        partial void OnMBAnalysisTypeIDChanging(global::System.Int32 value);
        partial void OnMBAnalysisTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatetimeCapture
        {
            get
            {
                return _DatetimeCapture;
            }
            set
            {
                if (_DatetimeCapture != value)
                {
                    OnDatetimeCaptureChanging(value);
                    ReportPropertyChanging("DatetimeCapture");
                    _DatetimeCapture = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DatetimeCapture");
                    OnDatetimeCaptureChanged();
                }
            }
        }
        private global::System.DateTime _DatetimeCapture;
        partial void OnDatetimeCaptureChanging(global::System.DateTime value);
        partial void OnDatetimeCaptureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatetimeDelivery
        {
            get
            {
                return _DatetimeDelivery;
            }
            set
            {
                if (_DatetimeDelivery != value)
                {
                    OnDatetimeDeliveryChanging(value);
                    ReportPropertyChanging("DatetimeDelivery");
                    _DatetimeDelivery = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DatetimeDelivery");
                    OnDatetimeDeliveryChanged();
                }
            }
        }
        private global::System.DateTime _DatetimeDelivery;
        partial void OnDatetimeDeliveryChanging(global::System.DateTime value);
        partial void OnDatetimeDeliveryChanged();

        #endregion
    
    }

    #endregion
    
}
